! -*- conf-xdefaults -*-
!
! changequote([, ])	note brackets will disappear from comments!
!
!#ident	"@(#)HOME:.Xdefaults	37.18	24/11/15 12:42:40 (woods)"
!
! N.B. WARNING:  This file must be processed with "xrdb -cpp m4" with macros and
! macro calls in the comments.  (perhaps it should be renamed to .Xdefaults.m4?)
!
! N.B.:  There shall be no blank lines!  Every line herein should be an xrdb(1)
! comment!
!
! Reload this file with (which is normally done in ~/.xinitrc):
!
!	xrdb -cpp m4 -load .Xdefaults
!
! To completely clear all resources, e.g. if you are removing one or changing
! the spelling, etc., first run:
!
!	xrdb -remove -all; xrdb -load $X11PATH/lib/X11/Xdefaults
!
! You can see the processed resources with:
!
!	xrdb -quiet -cpp m4 -E -n .Xdefaults
!
! You can see the preprocessor macro values with "xrdb -symbols".
!
! Maybe this should be converted to use cpp instead of m4 as some environments
! do not allow any easy way to specify extra command-line arguments for how they
! run xrdb (e.g. KDE Plasma), but keeping it as m4 allows use of the shared
! macro definitions in .X11-m4macros.m4 for ~/.ctwmrc and .fonts.alias.m4.
! Besides those strange environments can be worked around by running
!
!	mv .Xdefaults .Xdefaults.m4; xrdb -quiet -cpp m4 -E -n .Xdefaults.m4 > .Xdefaults
!
! (note some desktop environments first look for ~/.Xdefaults-${HOSTNAME}, while
! others use "~/.Xresources" as their pref. name, including in an example in X(7))
!
! Note the following is using M4's include mechanism, not xrdb's, as otherwise
! M4 will never see and process the contents of the included file:
!
! include(.X11-m4macros.m4)
!
! N.B.:  most(all?) programs, e.g. xterm, must be restarted to notice changes in
! their resources.  Just log out / stop X and login again!
!
! Note that although the M4 macros appear commented out in .Xdefaults syntax,
! they are still visible to m4.  Keeping them in comments helps line counting.
!
! N.B.:  So, every line that is not data should be a comment.  Do not use blank
! lines!
!
!
! Notes about precedence (full details in X(7):
! ============================================
!
! A "class" name is capitalised, and an "instance" name is lowercase.
!
! An asterisk (*) is a loose binding and is used to represent any number of
! intervening components, including none.  A period (.) is a tight binding and
! is used to separate immediately adjacent components.  A question mark (?) is
! used to match any single component name or class.  A database entry cannot end
! in a loose binding; the final component (which cannot be "?") must be
! specified.
!
! The full name and class are scanned from left to right (from highest level in
! the hierarchy to lowest), one component at a time.  At each level, the
! corresponding component and/or binding of each matching entry is determined,
! and these matching components and bindings are compared according to
! precedence rules.  Each of the rules is applied at each level, before moving
! to the next level, until a rule selects a single entry over all others.  The
! rules (in order of precedence) are:
!
!	1. An entry that contains a matching component (whether name, class, or
!	   "?") takes precedence over entries that elide the level (that is,
!	   entries that match the level in a loose binding).
!
!	2. An entry with a matching name (lowercase) takes precedence over both
!	   entries with a matching class (uppercase), and entries that match
!	   using "?".  An entry with a matching class (uppercase) takes
!	   precedence over entries that match using "?".
!
!	3. An entry preceded by a tight binding takes precedence over entries
!	   preceded by a loose binding.
!
! Normally applications are specified by their "application-specific class
! resource name" (normally the app-name capitalised, sometimes with the second
! letter after an 'X' also capitalised), though some apps use a more generic
! class name and so instances of that specific app must be referred to by their
! (instance) name (usually the app-name in all lowercase).  One such example
! used herein is xchrono(1).  It gives itself a class name of "XClock", and an
! instance name of "xchrono".  Note that instance names may, or more likely may
! not, match the "window" name, aka window title.  There are some other strange
! inconsistencies deeper in the standard Athena Widget Set's resource hierarchy,
! such as "Rect" widgets, which have "x" and "y" instances both with the class
! "Position"; and "Label" and "List" widges have "internalHeight" and
! "internalWidth" with the classes "Height" and "Width" respectively.  Many
! boolean variables are all in the class "Boolean", cursors in "Cursor", etc.
! See these with viewres(1).
!
!
! Notes about locations for X Window "Resources":
! ==============================================
!
! This file is intended to be loaded into the RESOURCE_MANAGER root window
! property (or the SCREEN_RESOURCES root window property) of the X server by
! xrdb(1).  See the note below though!
!
! By default X client application programs first look in a file named by the
! $XENVIRONMENT environment variable for X resources, if any.  This defaults to
! $HOME/.Xdefaults-<hostname> (or ~$USER/ if $HOME is not set) where "hostname"
! is the name of the host the client application is running on.  This file is
! consulted each time an X application starts, so it is not ideal to set
! XENVIRONMENT or allow this default to be used.
!
! Following that the resources set in the RESOURCE_MANAGER root window property
! are merged in.  As mentioned, xrdb(1) is normally used to load values into
! this property, and the current accompanying ~/.xinitrc will load this file
! (_after_ loading any system-wide Xdefaults file).
!
! Further application-specific resource files are searched for via
! $XUSERFILESEARCHPATH (the default of which respects $XAPPLRESDIR if that is
! set), then $XFILESEARCHPATH (and if no system app-defaults are found, then
! fallback_resources compiled into the app are used).
!
! Note according to pkgsrc(where?) /etc/profile is expected to set XAPPLRESDIR
! and users are expected to set XUSERFILESEARCHPATH, presumably keeping the
! default entries in place in it so it also still supports XAPPLRESDIR, though
! for simplicity's sake it should probably be the other way around!
!
! NetBSD PR#26357 suggests setting/fixing XFILESEARCHPATH as follows, which is
! the more universal solution as it simply extends what are considered the
! "system" files, leaving XUSERFILESEARCHPATH and XAPPLRESDIR to work as
! designed by default:
!
! XFILESEARCHPATH=\
!	/usr/pkg/lib/X11/%L/%T/%N137S:\
!	/usr/pkg/lib/X11/%l/%T/%N138S:\
!	/usr/pkg/lib/X11/%T/%N139S:\
!	/usr/pkg/lib/X11/%L/%T/%N%S:\
!	/usr/pkg/lib/X11/%l/%T/%N%S:\
!	/usr/pkg/lib/X11/%T/%N%S:\
!	/usr/X11R7/lib/X11/%L/%T/%N143S:\
!	/usr/X11R7/lib/X11/%l/%T/%N144S:\
!	/usr/X11R7/lib/X11/%T/%N145S:\
!	/usr/X11R7/lib/X11/%L/%T/%N%S:\
!	/usr/X11R7/lib/X11/%l/%T/%N%S:\
!	/usr/X11R7/lib/X11/%T/%N%S
!
! Another simpler option available for system managers is a union mount:
!
!	/usr/pkg/lib/X11/app-defaults /usr/X11R7/lib/X11/app-defaults union rw,hidden
!
! See X(7) and the libXt "X Toolkit Intrinsics" manual.
!
! N.B.:  if there is no RESOURCE_MANAGER root window property (i.e. if
! XresourceManagerString() returns NULL, presumably the case when the Xserver
! first starts), then this file, $HOME/.Xdefaults (i.e. without "-<hostname>"
! appended), will be used directly as a fallback!  This is documented in the
! libXt "X Toolkit Intrinsics – C Language Interface" manual, and is also
! clearly seen in the code:  libXt/src/Initialize.c:CombineUserDefaults().
!
! Since this file contains M4 code but libXt does not implement preprocessing
! with '-cpp m4', this could cause problems and confusion!  Xnest does seem to
! suffer from this.
!
! However for a normal Xserver that is very unlikely (practically impossible)
! once this file has been processed and loaded by the xrdb(1) command in
! ~/.xinitrc (though the/an initial invocation of xrdb itself would probably see
! the "raw" un-preprocessed values, e.g. if run with '-query').

! You can see the current properties for the root window with:
!
!	xprop -root
!
! Finally note MAXRESOURCES is defined as 400.  (xxx no maximum string length?)
!
!
! Now, on with the show!
! ======================
!
! Enable error messages for problems converting resource value strings to
! internal representations:
!
*StringConversionWarnings: on
!
! XXX editres(1) doesn't seem to work on XQuartz, nor does this help...
*editresBlock: none
!
! Xft setup:
! ==========
!
! For Xft we force the Xft.dpi resource to be set to what we've worked out in
! the macros file so this allows the physical font size to be specified, in
! points, (either with a ":size=" attribute in the font spec (which can be
! abbreviated as "-POINTS"), or with a command-line option to override that,
! e.g. with XTerm's "-fs" option.  See fonts.conf(5).
!
! Note that Xft does not seem to initialize the default Xft.dpi setting properly
! itself -- though it does do the right computation:
!
!	dpi = (((double) DisplayHeight (dpy, screen) * 25.4) /
!		(double) DisplayHeightMM (dpy, screen));
!
! However if you ask for a font using an XLFD spec. without specifying the
! actual resolution for the screen you are going to display it on then it just
! gives you, at best, the option for a 100x100 dpi scaled variant, and indeed
! that's what will usually be rendered:
!
! $ xlsfonts -fn '-*-liberation mono-medium-r-normal--0-0-*-*-m-*-iso10646-1'
! -misc-liberation mono-medium-r-normal--0-0-0-0-m-*-iso10646-1
! -misc-liberation mono-medium-r-normal--0-0-100-100-m-*-iso10646-1
!
! $ xlsfonts -fn '-*-commitmono-medium-r-normal--0-0-*-*-m-*-iso10646-1'
! -misc-commitmono-medium-r-normal--0-0-0-0-m-*-iso10646-1
! -misc-commitmono-medium-r-normal--0-0-100-100-m-*-iso10646-1
!
! According to the X Logical Font Description the ptSz and resY are to be used
! by X clients querying for fonts according to device-independent size in order
! to maintain constant text size on the display regardless of the pixel size;
! however unfortunately the standard code parsing XLFDs does not query for, nor
! use, any available DPI value to try to achieve this.  Instead one must
! explicitly specify the final desired DPI in the XLFD spec. request:
!
! $ xlsfonts -fn '-*-liberation mono-medium-r-normal--0-100-218-218-m-*-iso10646-1'
! -misc-liberation mono-medium-r-normal--0-100-218-218-m-0-iso10646-1
! -misc-liberation mono-medium-r-normal--0-100-218-218-m-0-iso10646-1
!
! I have patches for Xfontsel (now included in xfontsel-1.1.0 and newer) that
! will allow it to give you the option of choosing the actual resX and resY
! values for the very screen the widget is displayed on, in which case it will
! then display the sample text accurately scaled for that specific screen
! resolution (assuming of course that the screen DPI was correctly configured in
! the X server, which for most this means ensuring it gets accurate physical
! dimensions for the viewable area of the monitor display and/or passing the
! value on the Xserver command line with "-dpi" (though note the latter sets the
! resolution for all screens, and should only be used when the server cannot
! determine the physical display size, and/or it learns lies about it, e.g. as
! it does with Xquartz on an XDR Pro screen).
!
! n.b.:  I don't actually know of anything but Xft that uses a "*dpi" resource.
!
*dpi:		VertDPI
Xft.dpi:	FontYDPI
!
! These seem to be the default, but just to be sure:
!
Xft.antialias:			true
Xft.hinting:			true
!Xft.autohint:			false
! What degree of hinting to use (hintnone, hintslight, hintmedium, or hintfull)
!Xft.hintstyle:			hintfull
! Type of subpixel antialiasing (none, rgb, bgr, vrgb or vbgr)
!Xft.rgba:			rgb
!
! Do eliminate extra leading between lines!
Xft.minspace:			true
!
! XXX Do these still exist?
!Xft.render			false
!Xft.core			true
!
!
! Set a default font that should work for everyone.
!
! Note we want to pass a '0' for pixelSz for applications that will properly use
! normal XLFD specs for scalable fonts.
!
! xxx hmmm.... which of these do what?  Are there any apps that still cannot use
! scalable fonts?  (All using libXt can!)
!
! Solaris CDE docs say "*Font -- supports earlier version of X applications"
!
! The XLFD manual says:
!
!	"It is always safe to choose an available registry that is compatible
!	with the user's locale settings."
!
! So, given iso10646-1 _is_, by definition, compatible with iso8859-1 (and
! ASCII), and that's the only other encoding I would tend to use, the use of
! iso10646-1 encoding for most fots allows some non-conformant applications to
! use UTF-8!  (e.g. editors/wily).  Nothing can seem to help xedit(1) though --
! it is stuck in an 8-bit characters world.  (Note though that font definitions
! for xedit(1) live primarily in its lisp code!)
!
! Indeed with the note from libXaw shown below one should probably assume all
! applications using *font natively are 8-bit only (e.g. xmessage), however as
! the XLFD manual allows for, we can choose any registry that is "compatible"
! with the user's locale setting, and since iso10646-1 is compatible with
! iso8859-1, we go big!
!
! (Note for further confirmation, the Debian X FAQ, as last updated in 2013,
! said "Almost all X clients survive the addition of an ISO10646-1 font or even
! the replacement of all ISO8859-1 fonts by ISO10646-1 fonts without any
! problem.", though they did note "GTK+ 1.2.3 broke badly", but it has long ago
! been fixed.  The GTK+ authors thought they were smarter than the Xlib authors
! I guess, or were just lazy.)
!
! N.B.:  Applications using core font support (libX11) may emit a warning as
! follows with an LC_CTYPE of UTF-8 (or LANG or LC_ALL implying such):
!
!	Warning: Missing charsets in String to FontSet conversion
!
! This is because the default locale databases do silly magic mappings to 8-bit
! encodings and use those if a font is available in them, under the assumption
! one would want the glyph from the "old" font in case the iso10646 font doesn't
! have a glyph in that position.  This is an old an silly and costly and
! confusing thing to do since of course all modern fonts have full iso10646
! encodings and all their 8-bit alternative encodings are mapped onto the main
! Unicode charset!
!
! First though, we set the "International" resource, which helps where possible
! to allow full UTF-8 in widgets and apps (e.g. including xmessage, but not
! xman, or xedit).
!
! N.B.: for now we keep both *font and *fontSet resources (the same), ostensibly
! to make it possible to turn this off for testing.
!
! XXX Unfortunately no new standard command-line option was added to libXt to
! specify an explicit fontSet choice, and '-fn' (aka '-font') does not extend
! itself to doing this, so any attempt to use '-fn' or '-font' will only result
! in confusion.  The best command-line fallback is to try overriding with the
! generic resource setting flag:  '-xrm "*fontSet: blah'.  Note also there's no
! FontSet-to-String converter either, so you can't see the original fontSet
! definition in a editres(1).
!
*international:			true
!
! So, *font and *Font are probably not used with *international set true above.
!
*Font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!
! "In order to support multi-byte encodings, the concept of a FontSet was
! introduced in R5."
!
! from the libXaw manual:
!
! *font		The text font to use when displaying the list, when the international resource is false.
! *fontSet	The text font set to use when displaying the list, when the international resource is true.
!
!	"A font set is a collection of fonts suitable for rendering all codesets
!	in a locale's encoding"
!
! See https://blog.summercat.com/x-fonts-and-rpbar.html for more discussion.
! See also https://superuser.com/a/1596296
!
! An example of "a single locale-independent base font name" from the libX11
! documentation, presumably to be used in a *fontSet resource, but it doesn't
! seem like it will normally do anything useful and will rely on the exact
! ordering of the server's fontpath and what fonts are available:
!
!	"-*-*-*-R-Normal--*-180-100-100-*-*"
!
! A possible example for Japanese users (not sure what locale(1) settings this
! matches, but possibly "ja_JP.eucJP"):
!
!	"-jis-fixed-medium-r-normal--24-230-75-75-c-240-jisx0208.1983-0;-sony-fixed-medium-r-normal--24-230-75-75-c-120-jisx0201.1976-0;-b&h-lucidabright-medium-i-normal--24-0-100-100-p-0-iso8859-1"
!
! And another (what expands the "%d"s???):
!
!	"-sony-fixed-medium-r-normal--*-%d-*-*-c-*-jisx0201.1976-0,-b&h-lucida-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1,-wadalab-mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0"
!
! XXX some apps have really strange/broken FontSet definitions, such as gv!
!
! CDE documentation gives the somewhat bizarre advice:  "Specific fonts within a
! font set should be specified using XLFD naming conventions without the charset
! field specified."  (which could make sense for modern fonts with multiple
! available encodings, and then the locale and the X Locale Database mappings,
! would select the "right" font by default)
!
! So basically that means you can define a fontSet with a set of fonts, each
! with different(?) encodings to get full coverage for the locale(s) the user(s)
! might be using.
!
! Now, since iso10646-1 is the "universal" Unicode encoding for UTF-8, it should
! be the only font that needs to be listed in any fontSet for users using any
! *.UTF-8 locale:
!
! XXX but note that the default *.UTF-8 locale for most non-Asian languages
! (including C.UTF-8) is (via the .../locale/locale.dir file) "en_US.UTF-8", and
! the libX11 X Locale Database for it, .../locale/en_US.UTF-8/XLC_LOCALE,
! contains magic re-mappings that will screw some things up, including some of
! the XCalc button labels given below!  These magic re-encodings are also the
! origin of the infamous "Warning: Missing charsets in String to FontSet
! conversion" message.  They should all just be removed!
!
! XXX WARNING: Also, a FontSet cannot point at an alias, especially with the
! broken over-eager XLC_LOCALE in place as then the magic that expands a font to
! all its available encodings won't happen.
!
*FontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
! these are mentioned as the default values for *font and *fontSet resources for
! the Xt AsciiText widget, and note there is no widget name or class prefix:
! (xtDefaultFont is probably not used with '*international:true' set above)
!
xtDefaultFont:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
xtDefaultFontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
! these work for / affect various Xt apps....
!
! N.B.:  xterm, for one, can't expand aliases (for SimpleMenu)
!
*label.font:			-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*label.fontSet:			-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
*list.font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*list.fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
*Repeater.font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*Repeater.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
*Toggle.font:			-*-DecentFont-bold-r-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*Toggle.fontSet:		-*-DecentFont-bold-r-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
*tree*list.font:		-*-DecentFont-medium-r-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*tree*list.fontSet:		-*-DecentFont-medium-r-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
*mainViewport*resourceLabel.font:-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*mainViewport*resourceLabel.fontSet:-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
*namesLabel.font:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*namesLabel.fontSet:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
*constraintLabel.font:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*constraintLabel.fontSet:	-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
*SimpleMenu*menuLabel.font:	-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-HugeDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*SimpleMenu*menuLabel.fontSet:	-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-HugeDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
! these are probably just for SimpleMenu.SmeBSBa menu entry objects
!
*SmeBSB.font:			-*-DecentFontSans-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*SmeBSB.fontSet:		-*-DecentFontSans-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
*SimpleMenu.cursor: 		hand2
*SimpleMenu.foreground:		black
!
! ifelse(eval(PLANES > 8), 1, [
!
! xxx this is in the XTerm-color app-defaults file, and that works for XTerm,
! but without this explicitly here too UXTerm's don't get it!
*SimpleMenu.background:		AntiqueWhite
! ])
!
*searchLabel.font:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*searchLabel.fontSet:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
*replaceLabel.font:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
*replaceLabel.fontSet:		-*-DecentFontSans-medium-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
! XXX these seem to have wider effect than desired, but still don't fix the CTWM
! "identify" and "about" windows!
!
!*Text*font:			6x12
*Text.font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!*Text*fontSet:			6x12
*Text.fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
! 
!
*setup*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*setup*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
*setup*title.font:		-*-DecentFontSans-bold-r-normal--0-120-FontXDPI-FontYDPI-p-*-iso10646-1
*setup*title.fontSet:		-*-DecentFontSans-bold-r-normal--0-120-FontXDPI-FontYDPI-p-*-iso10646-1
!
! really just for Xfontsel (with "-scaled"):
!
*pixelSizeList:			0
*pointSizeList:			60, 70, 75, 80, 90, 100, 110, 120, 140, 160, 180, 200, 240, 300, 360, 400, 720, 722
!
! ifdef([COLOR], [
!
! Add colors for various apps, including Bitmap, Clock, Editres, Viewres, XCalc,
! XClock, XLogo, XTerm, Xedit, Xgc, and Xmessage (and maybe some installed by
! pkgsrc, such as swisswatch)
!
!	"The customization string associated with [the] display."
!
!	"The primary motivation for this addition was separate monochrome and
!	color application class defaults files."
!
! So, this is the filename suffix appended to the programs app-default file:
!
*customization: 		-color
!
! ], [
! ])
!
! ifelse(eval(PLANES <= 8), 1, [
! hmmm.... these are not necessary/good on >8bit displays any more??
!*installColormap:		Yes
!*installCmap:			true
! ])
!
! cleaner looking Xaw (Athena Widget Set) scrollbar appearance
! (some say this is more like 9term) (otherwise is black)
!
*Scrollbar.background:		gray60
*Scrollbar.foreground:		gray90
! The named pixmap is used to tile (or stipple) the "thumb" of the scrollbar.
! Set thumb to "None" to disable tiling.
!*Scrollbar.thumb:		vlines2
!*Scrollbar.thumb:		vlines3
!*Scrollbar.thumb:		plaid
!*Scrollbar.thumb:		Stipple
*Scrollbar.thumb:		None
!
! The width/height and minimum "length" should probably be more on a hi-res
! display....
!*Scrollbar.thickness:		???
!*Scrollbar.minimumThumb: 	???
!
! XXX fontList is only for Motif.  A FontList is a collection of fonts which are
! used for drawing text in multiple different faces and styles.  Xpdf, a Motif
! application, does use it; see below!  A FontList can apparently contain
! (multiple? the separator should be a semicolon) FontSets, with a trailing
! colon on the entry to designate it as a fontSet.  XXX I have not yet seen a
! valid definition which specifies more than one font or fontSet.  XXX there
! seem to be problems with some motif apps using UTF-8, so stick with iso8859-1
! for now(?)
!
! note this also has more app-specific bindings below...
*FontList:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*fontList:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!
! SystemFont and UserFont are probably for CDE, xxx stick with iso8859-1?:
!
*SystemFont:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*systemfont:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*UserFont:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*userfont:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!
!
!	App-Specific Resources
!	======================
!
! Emacs is "special" -- as in especially difficult to deal with
!
! Setting the FontBackend may not be necessary???  (only from 23.x(?) onwards)
! https://www.emacswiki.org/emacs/XftGnuEmacs
! Try: `(frame-parameter nil 'font-backend)'
Emacs.FontBackend:	xft
!
! see also https://www.emacswiki.org/emacs/SetFonts
!
Emacs.Font:		DecentFont:size=DecentPt
Emacs.FontSet:		DecentFont:size=DecentPt
!
! When using XLFD font-specs emacs actually ignores the resolutions, and needs
! either a '*' or a non-zero pixelSz value!
!
!Emacs.Font:		-*-DecentFont-medium-r-normal--VertPix90dpt-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
! XXX I'm not sure if XConsole can really properly handle UTF-8 -- possibly not!
!
XConsole*font:			6x9
XConsole*fontSet:		-*-DecentFont-medium-r-normal--0-TinyDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
xchrono*font:			6x9
xchrono*fontSet:		-*-DecentFont-medium-r-normal--0-TinyDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
! viewres by default wanted Helvetica everywhere (and doesn't need monospace).
! This would work with an alias, say "variable", but currently I have variable
! as a serif-ed font, and viewres looks better sans-serif-ed, so...
!
! xxx viewres still looks for its "*Tree*List*Font" resource even with
! "*international:true"!  (e.g. comment out the first line and see!)  Note
! though that it doesn't seem to actually use the result.  Perhaps this is
! related to the next oddity:
!
! xxx viewres also seems to need an explicit *fontSet value else it picks up
! "*label*fontSet" for the "Label" box and its resources!  (I think that must be
! a bug because the "Label" box shouldn't be any different from any other box --
! it's just its "label"!)
!
Viewres*font:			-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!Viewres*fontSet:		-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
! xxx editres has similar "problems" as viewres....
!
!Editres*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
Editres*namesLabel.font:	-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
Editres*namesLabel.fontSet:	-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
n!Editres*constraintLabel.font:	-*-DecentFontSans-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!Editres*constraintLabel.fontSet:-*-DecentFontSans-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
! ifdef([COLOR], [
Editres*SimpleMenu.background:	RoyalBlue3
! ], [
! ])
!
XLoad*Font:			-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
! xxx for testing:  this doesn't get rid of the warning from the Xlib and
! en_US.UTF-8/XLC_LOCALE bogosity -- because we don't have all of the necessary
! encodings in most fonts, I guess?  See also XCalc*fontSet below too.
XLoad*FontSet:			-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-1,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-2,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-3,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-4,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-5,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-koi8-r,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-7,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-9,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-13,\
				-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-15
!
! n.b.:  Note xmessage's class name is "Xmessage", not "XMessage"
!
! make the buttons bold...
Xmessage*Command*font:		-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
Xmessage*Command*fontSet:	-*-DecentFontSans-bold-DecentFontSansSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
! Xpdf settings
!
! XXX hmmm.....  xpdf cannot handle iso10646-1 (or maybe it's the motif
! libraries?)
!
Xpdf*fontList:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
Xpdf.initialZoom:		page
! ifdef([COLOR], [
! (we could in theory also use (PLANES <= 8) here...)
!Xpdf.installCmap:		true
! ])
! tooltip drawing is slow/broken(?)
Xpdf.toolTipEnable:		false
!
! also mainly for xpdf, but also other Motif things?  xxx stick with iso8859-1???
!
*zoomComboBox*fontList:		-*-DecentFontSerif-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso8859-1
*XmTextField*fontlist:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!
*buttonFontList:		-*-DecentFontSans-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso8859-1
*defaultFontList:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*labelFontList:			-*-DecentFontSerif-bold-DecentFontSerifSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso8859-1
*menubar*fontList:		-*-DecentFontSerif-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso8859-1
*helpFont:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*textFontList:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*xrtGearFontListSelected:	-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!
! XTerm settings:
!
! force TrueType (Xft) startup (use "-fa FaceName" to override)
*renderFont:			true
*faceName:			DecentFont
!
! really any and all app's cursors should blink!
*cursorBlink:			always
*cursorBlinkXOR:		false
!
! The keyboard should always match the terminal description, as best as is
! possible, except of course for "erase".  We always want the erase character to
! be ^H, and we always want the backarrow key to send the erase(^h) character.
! We also always want the delete key to send DEL.  This all matters primarily
! for terminal based text editors, especially emacs and its clones where we want
! things to work the same as they do on a real terminal, especially the VT100
! (and we ignore the ugly VT220 keyboard defaults).
!
! Setting keyboardType to "tcap" should have the effect of causing the "delete"
! key to send DEL too, so long as deleteIsDEL has its default value of "Maybe",
! at least according to the manual.
!
! XXX However, keyboardType=tcap overrules deleteIsDEL entirely and disables the
! menu toggle for it as well, so it is entirely unworkable.
!
!!UXTerm*keyboardType:		tcap
!!XTerm*keyboardType:		tcap
!
! XXX hmmmm on some laptop keyboards we do not always want deleteIsDEL set....
! The default ("maybe") is probably best, but then it requires manually toggling
! via the menu to enable it.
!
! XXX as mentioned the default is "Maybe", but you can't put that in a bool resource!
!UXTerm*deleteIsDEL:		Maybe
!XTerm*deleteIsDEL:		Maybe
!
! N.B.:  in any case we can set the TTY modes and tell XTerm to obey them and
! solve this problem once and for all:
!
UXTerm*ttyModes:		erase ^h
XTerm*ttyModes:			erase ^h
!
UXTerm*ptyInitialErase:		true
XTerm*ptyInitialErase:		true
!
! xxx "-tb" -- even when the manual describes it, support may not exist
!UXTerm*toolBar: 		true
!XTerm*toolBar:			true
!
! More xterm settings to avoid having to have $XTERM_OPTS everywhere:
!
! xxx activeIcon should only be set when using a compatible $WM
!UXTerm*activeIcon:		true
!XTerm*activeIcon:		true
!
UXTerm*cutNewline:		false
XTerm*cutNewline:		false
!
! xxx the default is false:
UXTerm*forceBoxChars:		false
XTerm*forceBoxChars:		false
!
! xxx this doesn't always do all the things, e.g. record the login session,
! depending on compile-time options and system support....
UXTerm*loginShell:		true
XTerm*loginShell:		true
!
UXTerm*reverseWrap:		true
XTerm*reverseWrap:		true
!
UXTerm*saveLines:		4096
XTerm*saveLines:		4096
!
UXTerm*scrollBar:		true
XTerm*scrollBar:		true
!
UXTerm*scrollKey:		true
XTerm*scrollKey:		true
!
UXTerm*scrollTtyOutput:		false
XTerm*scrollTtyOutput:		false
!
! ifelse(eval(PLANES >= 8), 1, [
! xxx assume this is in everyone's terminfo these days....
UXTerm*termName:		xterm-256color
XTerm*termName:			xterm-256color
! ])
!
! n.b.: zIconBeep is a percentage (presumably of change).  The manual says the
! default is "false", but presumably it should say "0".
UXTerm*zIconBeep:		1
XTerm*zIconBeep:		1
!
! xxx the *VT100(.*).font* values may be necessary if XTerm does not have Xft
! support, but that is hopefully no longer a concern anywhere.
! 
! xxx There are separate files for UXTerm and XTerm in app-defaults.  According
! to comments in UXTerm the "*VT100.font" can be a wide font (one with more than
! 256 glyphs), but if it is not wide, then it loads "*VT100.utf8Fonts.font".
!
! "Default", .faceSize is overridden by command-line "-fs", ~/.ctwmrc uses 7.5 and 9.0
*VT100.font:			-*-DecentFont-medium-r-normal--0-75-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font:		-*-DecentFont-medium-r-normal--0-75-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize:	7.5
! Unreadable:
*VT100.font1:			-*-DecentFont-medium-r-normal--0-05-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font1: 	-*-DecentFont-medium-r-normal--0-05-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize1: 	0.5
! Tiny:
*VT100.font2:			-*-DecentFont-medium-r-normal--0-60-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font2: 	-*-DecentFont-medium-r-normal--0-60-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize2:	6.0
! Small:
*VT100.font3:			-*-DecentFont-medium-r-normal--0-75-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font3: 	-*-DecentFont-medium-r-normal--0-75-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize3:	7.5
! Medium:
*VT100.font4:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font4: 	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize4:	9.0
! Large:
*VT100.font5:			-*-DecentFont-medium-r-normal--0-110-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font5: 	-*-DecentFont-medium-r-normal--0-110-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize5:	11.0
! Huge:
*VT100.font6:			-*-DecentFont-medium-r-normal--0-160-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font6: 	-*-DecentFont-medium-r-normal--0-160-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize6:	16.0
! Enormous:
*VT100.font7:			-*-DecentFont-medium-r-normal--0-240-FontXDPI-FontYDPI-m-*-iso8859-1
*VT100.utf8Fonts.font7: 	-*-DecentFont-medium-r-normal--0-240-FontXDPI-FontYDPI-m-*-iso10646-1
*VT100.faceSize7:	24.0
!
! Even with Unicode it is still nice to type accented chars
!
! The Emacs FAQ says to set eightBitInput to false to get true "meta" characters
! from XTerm, but then you cannot type accented chars to the command line or any
! other program.
!
! Unfortunately metaSendsEscape is not the correct default either as there seems
! to be a bug whereby it cannot be disabled when set to "true" here, so you have
! to manually enable it via the menu for Emacs, and disable it again if you want
! to type accented characters with "Meta" to any other program.
!
!UXTerm*metaSendsEscape:	true
!XTerm*metaSendsEscape:		true
!
! set up shifted and meta arrow and page keys to scroll xterms
!
! Having the same operations on both shifted and meta keys might be stupid.
!
! XXX we probably do not need the ~Shift entries -- they effectively force
! "normal mode" cursor keys -- especially if terminfo has not been fixed to
! remove "application" key switching from smkx and rmkx.
!
*VT100.Translations:       #override \n\
	Shift  <Key> Up:    scroll-back(1,line) \n\
	Shift  <Key> Down:  scroll-forw(1,line) \n\
	Shift  <Key> Prior: scroll-back(1,page) \n\
	Shift  <Key> Next:  scroll-forw(1,page) \n\
	Shift  <Key> Home:  scroll-to(begin) \n\
	Shift  <Key> End:   scroll-to(end) \n\
	Meta   <Key> Up:    scroll-back(1,line) \n\
	Meta   <Key> Down:  scroll-forw(1,line) \n\
	Meta   <Key> Prior: scroll-back(1,page) \n\
	Meta   <Key> Next:  scroll-forw(1,page) \n\
	Meta   <Key> Home:  scroll-to(begin) \n\
	Meta   <Key> End:   scroll-to(end) \n
!
! changequote(^?)	N.B.:  try to avoid m4 problems with the comment block below:
!
! XXX these would force "normal mode" cursor keys all the time:
!
!	~Shift <Key> Up:    string(\033[A) \n\
!	~Shift <Key> Down:  string(\033[B) \n\
!	~Shift <Key> Right: string(\033[C) \n\
!	~Shift <Key> Left:  string(\033[D) \n\
!	~Shift <Key> Home:  string(\033[H) \n\
!	~Shift <Key> End:   string(\033[F) \n\
!	~Shift <Key> Prior: string(\033[5~) \n\
!	~Shift <Key> Next:  string(\033[6~) \n\
!
! changequote([, ])
!
! (end of XTerm stuff)
!
! GhostView:
!
! N.B.:  See also ~/.gv, which is also an X11 resource file, however it does not
! use CPP to process it, instead it reads it directly, so some resources have to
! be here of they are conditional on any xrdb symbol values!  Also a default
! DEVICE can be set with the GS_DEVICE environment variable.
!
! XXX in theory we should add -dNOPLATFONTS if FontYDPI is < 110, but I think
! that probably doesn't matter any more if gs is using all scalable fonts.  In
! any case it makes no difference on XQuartz on old macos on the 27" iMac with a
! DPI of 109.
!
! ifdef([COLOR], [
GV.gsX11Device:		-sDEVICE=x11
! xxx these may be the defaults???
GV.gsX11AlphaDevice:	-sDEVICE=x11 -dTextAlphaBits=4 -dGraphicsAlphaBits=4
GV.palette:		color
! ], [
GV.gsX11Device:		-sDEVICE=x11mono
GV.gsX11AlphaDevice:	-sDEVICE=x11mono -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -dMaxBitmap=10000000
GV.palette:		grayscale
! ])
!
! gv(1)'s UI seems unable to handle international!?!?!?
GV*international:	false
!
GV.control.MButton.background:  gray90
GV*background:  gray90
!
! xxx from strings....
GV*font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fontSet:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!! xxx hmmm... the wildcard fontSet above doesn't cover the rest!
GV*SmeBSB.font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*SmeBSB.fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*Button.font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*Button.fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.processButton.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.processButton.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.Label*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.Label*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.Button*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.Button*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.locator*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.locator*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.dateButton*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.dateButton*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.titleButton*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.titleButton*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongvPopup*infoVerboseButton.font: -*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongvPopup*infoVerboseButton.fontSet: -*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.infoVerboseButton*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.infoVerboseButton*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.prevPage*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.prevPage*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV.?.nextPage*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV.?.nextPage*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*newtoc.font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*newtoc.fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*fileSel*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fileSel*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*fileSel*button1.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fileSel*button1.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*fileSel*button2.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fileSel*button2.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*fileSel*button3.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fileSel*button3.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*fileSel*button4.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fileSel*button4.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*fileSel*pathtext*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*fileSel*pathtext*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionsetupPopup*Label*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionsetupPopup*Label*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionsetupPopup*confirmButton.font: -*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionsetupPopup*confirmButton.fontSet: -*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionsetupPopup*Switch*font:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionsetupPopup*Switch*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionsetupPopup*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionsetupPopup*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionsetupPopup*Button.font:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionsetupPopup*Button.fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongvPopup*Label*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongvPopup*Label*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongvPopup*Switch*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongvPopup*Switch*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongvPopup*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongvPopup*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongvPopup*Button.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongvPopup*Button.fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionfsPopup*Label*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionfsPopup*Label*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionfsPopup*Switch*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionfsPopup*Switch*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionfsPopup*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionfsPopup*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optionfsPopup*Button.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optionfsPopup*Button.fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongsPopup*Label*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongsPopup*Label*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongsPopup*Switch*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongsPopup*Switch*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongsPopup*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongsPopup*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*optiongsPopup*Button.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*optiongsPopup*Button.fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*dialogPopup*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*dialogPopup*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*dialogPopup*Button.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*dialogPopup*Button.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*dialogPopup*message*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*dialogPopup*message*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*notePopup*Button.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*notePopup*Button.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*notePopup*message*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*notePopup*message*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*confirmPopup*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*confirmPopup*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*confirmPopup*Button.font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*confirmPopup*Button.fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*versionPopup*Label*font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*versionPopup*Label*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*versionPopup*versionTexta*font:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*versionPopup*versionTexta*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*versionPopup*versionTextb*font:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*versionPopup*versionTextb*fontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
GV*infoPopup*Text*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!GV*infoPopup*Text*fontSet:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
! Xcb:  XXX not enough to fix it...
Xcb*fontSet:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
!
XCal.fontToday:		-*-DecentFontSans-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XCal*Font:		-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XCal*FontSet:		-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XCal*info.Font:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
XCal*info.FontSet:	-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
XCal*alarmText*Font:	-*-DecentFontSans-medium-r-normal--0-140-FontXDPI-FontYDPI-p-*-iso10646-1
XCal*alarmText*FontSet:	-*-DecentFontSans-medium-r-normal--0-140-FontXDPI-FontYDPI-p-*-iso10646-1
!
XAlarm*font:				-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm*fontSet:				-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm.Alarm!.alarm.message.font:	-*-DecentFontSans-medium-r-normal--0-340-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm.Alarm!.alarm.message.fontSet:	-*-DecentFontSans-medium-r-normal--0-340-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm.When?.when.confirm.value*font:	-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm.When?.when.confirm.value*fontSet:	-*-DecentFontSans-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm.When?*value*font:		-*-DecentFontSans-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XAlarm.When?*value*fontSet:		-*-DecentFontSans-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
! XScrabble:
!
! XXX somehow I broke something in here that is now causing xscrab, the actual
! game play program that's setgid-"games", to open and parse this ~/.Xdefaults
! directly as warned about above.  This doesn't make sense, but something must
! have changed!
!
XScrabble*board.edg*justify:		center
XScrabble*font:				-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
XScrabble*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
XScrabble*title.font:			-*-DecentFontSans-bold-r-normal--0-140-FontXDPI-FontYDPI-p-*-iso10646-1
XScrabble*title.fontSet:		-*-DecentFontSans-bold-r-normal--0-140-FontXDPI-FontYDPI-p-*-iso10646-1
XScrabble*abouttitle.font:		-*-DecentFontSans-bold-r-normal--0-120-FontXDPI-FontYDPI-p-*-iso10646-1
XScrabble*abouttitle.fontSet:		-*-DecentFontSans-bold-r-normal--0-120-FontXDPI-FontYDPI-p-*-iso10646-1
XScrabble*abouttext.font:		-*-DecentFontSerif-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XScrabble*abouttext.fontSet:		-*-DecentFontSerif-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
! xxx not sure why these don't work with XScrabble in front....
*hiscoreshell*hiscoretitle.font:	-*-DecentFontSans-bold-r-normal--0-140-FontXDPI-FontYDPI-p-*-iso10646-1
*hiscoreshell*hiscoretitle.fontSet:	-*-DecentFontSans-bold-r-normal--0-140-FontXDPI-FontYDPI-p-*-iso10646-1
*bestgoshell*bestgotitle.font:		-*-DecentFontSans-bold-r-normal--0-120-FontXDPI-FontYDPI-p-*-iso10646-1
*bestgoshell*bestgotitle.fontSet:	-*-DecentFontSans-bold-r-normal--0-120-FontXDPI-FontYDPI-p-*-iso10646-1
!
! XCalc:
!
! XXX XCalc is a great demonstration of how the libX11/Xlib character encoding
! translations triggered by en_US.UTF-8/XLC_LOCALE don't have the desired effect
! when the primary font has iso10646-1 encoding.  None of the broken
! translations show up in bold!  Nor when using an XLC_LOCALE with just these
! available encodings do any chars appear in bold.
!
XCalc*font:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
XCalc*fontSet:			-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-2,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-3,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-4,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-5,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-koi8-r,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-7,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-9,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-13,\
				-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-15
!
! re-label the buttons for iso10646-1 with "*international:true"
!
! xxx so these should be wrapped in an ifdef that's set only if so
!
! N.B.  with "*international:true" we don't have to override the "buttonN.font"
! values because they are ignored and the global "*fontSet" value overrides.
!
XCalc*ti.button1.label:			¹/x
! xxx the 'MATHEMATICAL MONOSPACE SMALL X' is not in many scalable fonts yet....
!XCalc*ti.button2.label:		𝚡²
XCalc*ti.button2.label:			x²
XCalc*ti.button3.label:			√‾
! xxx the 'SCRIPT SMALL E', is not in DejaVuSansMono, only DejaVuSans (proportional)
!XCalc*ti.button11.label:		ℯ
! xxx the next three also aren't in very many scalable fonts yet...
!XCalc*ti.button13.label:		㏒
!XCalc*ti.button14.label:		㏑
!XCalc*ti.button15.label:		𝚢ˣ
XCalc*ti.button15.label:		yˣ
XCalc*ti.button16.label:		not ¬
XCalc*ti.button17.label:		and ∧
XCalc*ti.button18.label:		or ∨
XCalc*ti.button19.label:		xor ⊻
XCalc*ti.button21.label:		π
XCalc*ti.button26.label:		shl <<
XCalc*ti.button30.label:		shr >>
XCalc*ti.button31.label:		mod %
XCalc*ti.button35.label:		÷
XCalc*ti.button40.label:		×
XCalc*ti.button45.label:		−
XCalc*ti.button50.label:		+
XCalc*ti.button54.label:		±
XCalc*ti.button55.label:		=
!
XCalc*hp.button1.label:			√‾
!XCalc*hp.button2.label: 		ℯˣ
XCalc*hp.button2.label:			eˣ
XCalc*hp.button3.label:			10ˣ
!XCalc*hp.button4.label: 		𝚢ˣ
XCalc*hp.button4.label:			yˣ
XCalc*hp.button5.label:			¹/x
XCalc*hp.button10.label:		÷
XCalc*hp.button12.label:		π
XCalc*hp.button20.label:		×
XCalc*hp.button25.fontSet:		-*-DecentFont-medium-r-normal--0-140-FontXDPI-FontYDPI-m-*-iso10646-1
XCalc*hp.button25.label:		⇐
XCalc*hp.button26.fontSet:		-*-DecentFont-medium-r-normal--0-50-FontXDPI-FontYDPI-m-*-iso10646-1
XCalc*hp.button30.label:		−
XCalc*hp.button39.label:		+
!
! XXX XCalc also has many resources defining the layout and positioning of every
! element, and some of those should be scaled....
!
! ifdef([COLOR], [
!
!	override XCalc-color a bit:
!
XCalc*ti.Command.foreground:		black
!
! "CE/C"
XCalc*ti.button4.background:		rgb:e/b/9
! "AC"
XCalc*ti.button5.background:		rgb:f/7/7
! "INV"
XCalc*ti.button6.background:		rgb:c/d/f
! "DRG"
XCalc*ti.button10.background:		rgb:c/d/f
! "pie"
XCalc*ti.button11.background:		rgb:c/f/f
! "ee"
XCalc*ti.button12.background:		rgb:c/d/f
! "trunc"
XCalc*ti.button20.foreground:		black
XCalc*ti.button20.background:		rgb:c/d/e
! "pi"
XCalc*ti.button21.background:		rgb:c/f/f
! temp fix for bad number key backgrounds
XCalc*ti.button22.background:		rgb:c/d/e
XCalc*ti.button23.background:		rgb:c/d/e
XCalc*ti.button24.background:		rgb:c/d/e
! "base"
XCalc*ti.button25.foreground:		black
XCalc*ti.button25.background:		rgb:c/d/f
! HEX keys
XCalc*ti.button27.background:		gray90
XCalc*ti.button28.background:		gray90
XCalc*ti.button29.background:		gray90
! "shr"
XCalc*ti.button30.foreground:		black
XCalc*ti.button30.background:		rgb:c/d/e
! HEX keys
XCalc*ti.button32.background:		gray90
XCalc*ti.button33.background:		gray90
XCalc*ti.button34.background:		gray90
! "/"
XCalc*ti.button35.foreground:		black
! "STO"
XCalc*ti.button36.background:		lightYellow
! "*"
XCalc*ti.button40.foreground:		black
! "RCL"
XCalc*ti.button41.background:		lightYellow
! temp fix for bad number key backgrounds
XCalc*ti.button42.background:		gray95
XCalc*ti.button43.background:		gray95
XCalc*ti.button44.background:		gray95
! "-"
XCalc*ti.button45.background:		rgb:e/d/c
! "SUM"
XCalc*ti.button46.background:		lightYellow
! temp fix for bad number key backgrounds
XCalc*ti.button47.background:		gray95
XCalc*ti.button48.background:		gray95
XCalc*ti.button49.background:		gray95
! "+"
XCalc*ti.button50.background:		rgb:e/d/c
! "EXC"
XCalc*ti.button51.background:		lightYellow
! temp fix for bad number key backgrounds
XCalc*ti.button52.background:		gray95
XCalc*ti.button53.background:		gray95
XCalc*ti.button54.background:		gray95
! "="
XCalc*ti.button55.background:		rgb:e/d/c
! ])
!
! Xman:
!
! N.B.: although xman(1) is able to use fonts with iso10646-1 encodings, it
! cannot handle UTF-8 output from nroff, so must be run with
! LC_CTYPE=en_US.iso8859-1 in the environment.
!
Xman*international:		false
!
! The following are the default resource values from the code, but they don't
! match the installed app-defaults file:
!
!	manualFontNormal
!	*-new century schoolbook-medium-r-normal--*-120-*
!	manualFontBold
!	*-new century schoolbook-bold-r-normal--*-120-*
!	manualFontItalic
!	*-new century schoolbook-bold-i-normal--*-120-*
!	manualFontSymbol
!	*-symbol-medium-r-normal--*-120-*
!
Xman*manualFontBold:		-*-DecentFont-bold-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
Xman*manualFontItalic:		-*-DecentFont-medium-DecentFontSlant-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
Xman*manualFontNormal:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
! xxx nothing here seems to help with nroff's UTF-8 output....
Xman*manualFontSymbol:		-adobe-symbol-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-p-0-adobe-fontspecific
!Xman*manualFontSymbol:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso10646-1
Xman*directoryFontNormal:	-*-DecentFontSerif-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso8859-1
!
! pixmap (xxx still dumps core while starting)
!
Pixmap*fontList:		-*-DecentFont-medium-r-normal--0-DecentDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
Pixmap*info*label.fontList:	-*-DecentFont-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
Pixmap*textOptions.fontName.value:-*-DecentFont-medium-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-m-*-iso8859-1
!
! xbomb
!
XBomb*font:                  -*-DecentFontSans-bold-r-normal--0-SmallerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
XBomb*grid.font:             -*-DecentFontSans-bold-r-normal--0-BiggerDeciPt-FontXDPI-FontYDPI-p-*-iso10646-1
!
! Now some sample text for xfontsel.  The first is assumed to be in iso10646-1.
!
! The first line of each are chars that must all be easily distinguisable as
! unique for programming (except maybe the last two, the first of which is the
! SOFT HYPHEN, which when displayed should probably look just like the
! HYPHEN-MINUS that follows it).  The fifth line is made up of the ASCII
! punctuation characters gathered in value-order.  The sixth-eighth lines are
! value-order iso8859-1 characters 0x80-0xFF.
!
! N.B.:  Since this file contains UTF-8 encoded Unicode characters, the high-bit
! ISO-8859 characters must be encoded as octal escaped characters (along with
! some special ones that make Emacs font-lock mode happy, and of course the
! embedded newlines too).
!
! Note that xrdb does not strip leading whitespace after a backslash (only after
! the colon), so all these lines start with an extra tab character.
!
! changequote(	)	N.B.:  try to avoid m4 problems with the strings below:
!
XFontSel*sampleText:\
	`\264\250\047\0421lIi|\246\041¡/\3300Oo{[(<\253\273>)]},.;\072?\277\n\
	\251\256a\2522\2623\263u\265pP\266#\244\243$\242\245\260.\267,\270\261+=\254~_\255-\n\
	ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789\n\
	abcdefghijklmnopqrstuvwxyz\n\
	\040\041\042#$%&\047()*+,-./\072;<->?@[\\]^_`{|}~\n\
	\240\241\242\243\244\245\246\247\250\251\252\253\254\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\n\
	\300\301\302\303\304\305\306\307\310\311\312\313\314\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\n\
	\340\341\342\343\344\345\346\347\350\351\352\353\354\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377\n
!
! This set uses UTF-8 encoding directly, and adds three lines of some hopefully
! commonly used Unicode characters, adding first the Greek and Cyrillic
! alphabets, followed by a jumble of common/interesting Unicode characters.
!
XFontSel*sampleTextUCS:\
	~`´¨\'\"1lIi|¦\041¡/DØ0Oo{[(<«»>)]},.;\072?¿\n\
	©®aª2²3³8BuµpP¶#¤£$¢¥°.·,¸±+=¬~_--\n\
	ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789\n\
	abcdefghijklmnopqrstuvwxyz\n\
	 \041\042#$%&\047()*+,-./\072;<->?@[\\]^_`{|}~\n\
	 ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿\n\
	ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞß\n\
	àáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\n\
	ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ\n\
	αβγδεζηθικλμνξοπρςτυφχψω\n\
	АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ\n\
	абвгдеёжзийклмнопрстуфхцчшщъыьэюя\n\
	–―†‡•…‰™ᴂﬁœᴈŠŸž⌘\n\
	☺☹✝✚✡☥⎈☭☪∀∂∈ℝ∧∪↑↗↨↻⇣┐┼╔╘►⑀₂ἠḂӥẄɐː⍎אԱა�\n\
	⌈⌉⌊⌋∏∑∫∼∞πΩ∂√‾÷×−=≔₀₁₂ʸˣ⁰¹³²⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿⁱ\n\
	⊕⊖⊗⊘⊙⊚⊛∙∘′″‴∧∨∝∃⊦∅∈∉⊂⊃⊆⊇⊄⋂⋃\n\
	※◆░▒␉␌␍␊␤␋┘┐┌└┼⎺⎻─⎼⎽├┤┴┬│≤≥≮≯≠≈≡$¢£¤¥₿₠€∎\n\
	‹›“”‘’„〖〗【】「」『』〈〉《》〔〕\n\
	•◦‣✓●■◆○□◇★☆♠♣♥♦♤♧♡♢♩♪♫♬♭♮♯☰☱☲☳☴☵☶☷\n\
	←→↑↓↔↖↗↙↘⇐⇒⇑⇓⇔⇗⇦⇨⇧⇩↞↠↟↡↺↻☞☜☝☟\n\
	☠☢☣☤♲♳⌬♨♿☉☼☾☽♀♂☯♔♕♖♗♘♙♚♛♜♝♞♟\n\
	に日本語を入れておくとよろしい。\n\
	林花謝了春紅 太匆匆, 無奈朝來寒雨 晚來風\n\
	胭脂淚 留人醉 幾時重, 自是人生長恨 水長東\n
!
! changequote([, ])
!
