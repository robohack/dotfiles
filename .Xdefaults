! -*- conf-xdefaults -*-
!
!#ident	"@(#)HOME:.Xdefaults	37.4	24/03/11 11:53:15 (woods)"
!
! reload with:
!
!	xrdb -cpp m4 -override .Xdefaults
!
! N.B. WARNING:  This file must be processed with "xrdb -cpp m4"
! (perhaps it should be renamed to .Xdefaults.m4?)
!
! Note that most(all?) programs, e.g. xterm, must be restarted to notice changes
! in their resources.
!
! WARNING:  Do not use lone single quotes (e.g. for contractions) in comments!
!
!	Work out the screen resolution in order to specify default Font DPIs
!
! n.b.:  resolutions are in pixels per metre, for some stupid reason....
! so 4500 dpM (/39.37) is just over 110 dpi
!
! XXX the next chunk should probably be an include file, shared with .ctwmrc
! (and .fonts/fonts.alias)
!
! Note that although these macros appear commented out in .Xdefaults syntax,
! they are still visible to m4.  Keeping them in comments help line counting.
!
! changequote([, ])
!
! define(HorizDPI, eval(((X_RESOLUTION * 100) / 3937) + ((((X_RESOLUTION * 1000) / 3937) % 10) >= 5)))
! define(VertDPI, eval(((Y_RESOLUTION * 100) / 3937) + ((((X_RESOLUTION * 1000) / 3937) % 10) >= 5)))
! define(ScreenDimX, eval(WIDTH / HorizDPI))
! define(ScreenDimY, eval(HEIGHT / VertDPI))
!
! N.B.:  If true screen resolution is within 10% of 100DPI it could sense to
! claim 100DPI to avoid font-scaling artifacts for bitmap fonts, but since we
! already alias most font names that did refer to bitmap fonts into scalable
! fonts anyway, there is not much to gain
!
! ifelse(eval((HorizDPI / 100 == 1) && (HorizDPI % 100 <= 10)), 1,
!  [define(FontXDPI, HorizDPI)],
!  [define(FontXDPI, HorizDPI)]
! )
! ifelse(eval((VertDPI / 100 == 1) && (VertDPI % 100 <= 10)), 1,
!  [define(FontYDPI, VertDPI)],
!  [define(FontYDPI, VertDPI)]
! )
!
! XXX this is not really necessary, but an example of how to work out the number
! of pixels for a given point size (9.0)
! define(VertPix9pt, eval((VertDPI * (90000 / 720)) / 1000))
!
! avoid problems with square brackets in values below
!
! N.B.:  remember to turn quoting back on to use macros again!
!
! Note that Xft does not seem to initialize the default Xft.dpi setting properly -- it does
! do the right computation:
!
!	dpi = (((double) DisplayHeight (dpy, screen) * 25.4) /
!		(double) DisplayHeightMM (dpy, screen));
!
! However if you ask for a font without specifying the actual resolution for the
! screen you are going to display it on then it just gives you, at best, the
! option for a 100x100 dpi scaled variant:
!
! $ xlsfonts -fn '-*-liberation mono-medium-r-*-*-0-0-*-*-m-0-iso10646-1'
! -misc-liberation mono-medium-r-normal--0-0-0-0-m-0-iso10646-1
! -misc-liberation mono-medium-r-normal--0-0-100-100-m-0-iso10646-1
!
! $ xlsfonts -fn '-misc-commitmono-medium-r-*-*-0-0-*-*-m-0-iso10646-1'
! -misc-commitmono-medium-r-normal--0-0-0-0-m-0-iso10646-1
! -misc-commitmono-medium-r-normal--0-0-100-100-m-0-iso10646-1
!
! In fact according to the X Logical Font Description the ptSz and resY are to
! be used by X clients querying for fonts according to device-independent size
! in order to maintain constant text size on the display regardless of the pixel
! size.
!
! I have patches for Xfontsel that will allow it to give you the option of
! choosing the actual resX and resY values for the very screen the widget is
! displayed on, in which case it will then display the sample text accurately
! scaled for that specific screen resolution (assuming of course that the screen
! DPI was correctly configured in the X server, which for most this means
! ensuring it gets accurate physical dimensions for the viewable area of the
! monitor display and/or passing the value on the Xserver command line with
! "-dpi" (though note the latter sets the resolution for all screens, and should
! only be used when the server cannot determine the physical display size,
! and/or it learns lies about it, e.g. as it does with Xquartz on XDR Pro).
!
*dpi:		VertDPI
Xft.dpi:	FontYDPI
!
! These seem to be the default, but just to be sure:
!
Xft.antialias:			true
Xft.hinting:			true
!Xft.autohint:			false
! What degree of hinting to use (hintnone, hintslight, hintmedium, or hintfull)
!Xft.hintstyle:			hintfull
! Type of subpixel antialiasing (none, rgb, bgr, vrgb or vbgr)
!Xft.rgba:			rgb
!
! Do eliminate extra leading between lines!
Xft.minspace:			true
!
! XXX Do these still exist?
!Xft.render			false
!Xft.core			true
!
! ifelse(eval(FontYDPI > 110), 1, [
!
! Emacs is "special" -- as in especially difficult to deal with
!
! Emacs actually ignores the resolutions, and needs either a '*' or a non-zero
! pixelSz value.
!
! this may not be necessary???  (only from 23.x(?) onwards)
! https://www.emacswiki.org/emacs/XftGnuEmacs
! `(frame-parameter nil 'font-backend)'
Emacs.FontBackend: xft
!
! see also https://www.emacswiki.org/emacs/SetFonts
!
Emacs.Font:		CommitMono:size=9
!Emacs.Font:		-misc-commitmono-medium-r-normal--VertPix9pt-90-FontXDPI-FontYDPI-m-0-*-*
!Emacs.Font:		-*-liberation mono-medium-r-normal--VertPix9pt-90-FontXDPI-FontYDPI-m-0-*-*
!
! Set a default font that should work for everyone.  Best looking is
! "commitmono", most complete is "liberation mono".
!
! Possible alternative (even more glyphs than liberation mono, but no mark in
! the zero) (from the fonts/freefont-ttf package):
!
! -misc-freemono-medium-*-*-*-0-*-218-218-m-0-iso10646-1
!
! More alternatives (not quite as many glyphs):
!
! -ibm-ibm plex mono-medium-*-*-*-0-*-218-218-m-0-iso10646-1
! -misc-cascadia mono-medium-*-*-*-0-*-218-218-m-0-iso10646-1
!
! Note we want to pass a '0' for pixelSz for applications that will properly use
! normal XLFD specs for scalable fonts, but for others we might be better off
! passing a '*' instead, or maybe VertPix9pt as for Emacs?
!
! xxx hmmm.... which of these do what?
!
*Font:				-misc-commitmono-medium-r-normal--0-72-FontXDPI-FontYDPI-m-0-iso8859-1
*.Font:				-misc-commitmono-medium-r-normal--0-72-FontXDPI-FontYDPI-m-0-iso8859-1
! this next one is used by xfontsel, xconsole, etc., and may have been same as
! "7x14"?, but that's way too big, so we shrink it down to be the same as "6x10"
*font:				-misc-commitmono-medium-r-normal--0-72-FontXDPI-FontYDPI-m-0-iso8859-1
*.font:				-misc-commitmono-medium-r-normal--0-72-FontXDPI-FontYDPI-m-0-iso8859-1
*font*:				-misc-commitmono-medium-r-normal--0-72-FontXDPI-FontYDPI-m-0-iso8859-1
*fontList:			-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
*.fontList:			-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
!
! XXX is this right?  Does it do anything?  Some app-defaults files mention XtDefaultFont
!
! XXX some apps have really strange FontSet definitions, such as gv (which
! currently complains that it cannot convert the following to a FontSet
! structure despite the trailing '*' entry):
!
!	"-efont-biwidth-medium-r-normal--16-*-*-*-*-*-iso10646-1,-gnu-unifont-medium-r-normal--16-*-*-*-*-*-iso10646-1,-adobe-helvetica-medium-r-normal--14-*-*-*-*-*-*-*,-jis-fixed-medium-r-*--16-*-*-*-*-*-jisx0208.1983-0,-*-*-medium-r-*--16-*-*-*-*-*-*-*,*"
!
xtDefaultFont:			-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
xtDefaultFontSet:		-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
! these are mentioned as the default values for font and fontSet resources for
! the Xt AsciiText widget
XtDefaultFont:			-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
XtDefaultFontSet:		-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
!,-*-*-*-*-*--0-100-FontXDPI-FontYDPI-*-0-*-*
!
! ], []) End (FontYDPI > 110)
!
! really just for Xfontsel (with "-scaled"):
!
*pixelSizeList:			0
*pointSizeList:			80, 90, 100, 110, 120, 140, 160, 170, 180, 200, 240, 250, 300, 350, 400
!
! ifdef([COLOR], [
! colors for xterm(?) and swisswatch (why the '-'?  I dunno!)
*customization: 		-color
! hmmm.... these are probably not necessary/good on >8bit displays any more??
! (we could in theory use (PLANES <= 8) here...)
!*installColormap:		Yes
!*installCmap:			true
! ], [])
!
! cleaner looking Xaw (Athena Widget Set) scrollbar appearance
! (some say this is more like 9term) (otherwise is black)
!
*Scrollbar.foreground:		gray80
*Scrollbar.background:		gray50
!
! The named pixmap is used to tile (or stipple) the "thumb" of the scrollbar.
! Set to "None" to disable tiling.
!
*Scrollbar.thumb: None
!
! The width/height and minimum "length" should probably be more on a hi-res
! display....
!*Scrollbar.thickness:		???
!*Scrollbar.minimumThumb: 	???
!
!
! Xpdf settings
!
Xpdf*fontList:			-*-courier-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-1
Xpdf.initialZoom:		page
! ifdef([COLOR], [
! (we could in theory also use (PLANES <= 8) here...)
!Xpdf.installCmap:		true
! ])
Xpdf.toolTipEnable:		false
!
! also mainly for xpdf, but also other Motif things?
! (these use new aliases from ~/.fonts.alias.m4)
!
! ifelse(eval(FontYDPI > 110), 1, [
*.zoomComboBox*fontList:	variable
*XmTextField.fontlist:		fixed
!
*buttonFontList:		varbold
*defaultFontList:		fixed
*labelFontList:			italic
*menubar*fontList:		varbold
*helpFont:			fixed
*textFontList:			fixed
*xrtGearFontListSelected:	bold
! ], [])
!
! Xterm settings:
!
! force TrueType (Xft) startup
*renderFont:			true
*faceName:			CommitMono
!
*cursorBlink:			true
*deleteIsDEL:			true
!
*SimpleMenu*menuLabel.font:	-misc-commitmono-bold-r-normal--*-100-FontXDPI-FontYDPI-m-0-iso8859-*
*SimpleMenu*Cursor: 		hand2
!
! "Default", size is overridden by command-line "-fs" ???
!*VT100.font:		-misc-commitmono-medium-r-normal--0-100-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font:	-misc-commitmono-medium-r-normal--0-100-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize:	9.0
! Unreadable: (this is by default "nil2", but that is a bitmap font (in misc))
!*VT100.font1:  		-misc-commitmono-medium-r-normal--0-50-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font1:	-misc-commitmono-medium-r-normal--0-10-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize1: 	0.5
! Tiny:
!*VT100.font2:		-misc-commitmono-medium-r-normal--0-70-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font2:	-misc-commitmono-medium-r-normal--0-70-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize2:	7.0
! Small:
!*VT100.font3:		-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font3:	-misc-commitmono-medium-r-normal--0-90-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize3:	9.0
! Medium:
!*VT100.font4:		-misc-commitmono-medium-r-normal--0-100-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font4:	-misc-commitmono-medium-r-normal--0-100-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize4:	10.0
! Large:
!*VT100.font5:		-misc-commitmono-medium-r-normal--0-120-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font5:	-misc-commitmono-medium-r-normal--0-120-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize5:	12.0
! Huge:
!*VT100.font6:		-misc-commitmono-medium-r-normal--0-180-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font6:	-misc-commitmono-medium-r-normal--0-180-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize6:	18.0
! Enormous:
!*VT100.font7:		-misc-commitmono-medium-r-normal--0-240-FontXDPI-FontYDPI-m-0-iso8859-*
!*VT100.utf8Fonts.font7:	-misc-commitmono-medium-r-normal--0-240-FontXDPI-FontYDPI-m-0-iso10646-1
*VT100.faceSize7:	24.0
!
! Even with Unicode it is still nice to type accented chars
!
! The Emacs FAQ says to set eightBitInput to false to get true "meta" characters
! from Xterm, but then you cannot type accented chars to the command line or any
! other program.
!
! Unfortunately metaSendsEscape is not the correct default either as there seems
! to be a bug whereby it cannot be disabled when set to "true" here, so you have
! to manually enable it for Emacs, and disable it again if you want to type
! accented characters with "Meta" to any other program.
!
!UXTerm*metaSendsEscape:	true
!XTerm*metaSendsEscape:		true
!
! set up shifted and meta arrow and page keys to scroll xterms
!
! Having the same operations on both shifted and meta keys might be stupid.
!
! XXX we probably do not need the ~Shift entries -- they effectively force
! "normal mode" cursor keys -- especially if terminfo has not been fixed to
! remove "application" key switching from smkx and rmkx.
!
*VT100.Translations:       #override \n\
	Shift  <Key> Up:    scroll-back(1,line) \n\
	Shift  <Key> Down:  scroll-forw(1,line) \n\
	Shift  <Key> Prior: scroll-back(1,page) \n\
	Shift  <Key> Next:  scroll-forw(1,page) \n\
	Shift  <Key> Home:  scroll-to(begin) \n\
	Shift  <Key> End:   scroll-to(end) \n\
	Meta   <Key> Up:    scroll-back(1,line) \n\
	Meta   <Key> Down:  scroll-forw(1,line) \n\
	Meta   <Key> Prior: scroll-back(1,page) \n\
	Meta   <Key> Next:  scroll-forw(1,page) \n\
	Meta   <Key> Home:  scroll-to(begin) \n\
	Meta   <Key> End:   scroll-to(end) \n
!
! changequote()
!
! XXX these would force "normal mode" cursor keys all the time:
!
!	~Shift <Key> Up:    string(\033[A) \n\
!	~Shift <Key> Down:  string(\033[B) \n\
!	~Shift <Key> Right: string(\033[C) \n\
!	~Shift <Key> Left:  string(\033[D) \n\
!	~Shift <Key> Home:  string(\033[H) \n\
!	~Shift <Key> End:   string(\033[F) \n\
!	~Shift <Key> Prior: string(\033[5~) \n\
!	~Shift <Key> Next:  string(\033[6~) \n\
!
! Now some sample text for xfontsel.  The first is assumed to be in iso8859-1.
!
! The first line of each are chars that must all be easily distinguisable as
! unique for programming (except maybe the last two, the first of which is the
! SOFT HYPHEN, which when displayed should probably look just like the
! HYPHEN-MINUS that follows it).  The fifth line is made up of the ASCII
! punctuation characters gathered in value-order.  The sixth-eighth lines are
! value-order iso8859-1 characters 0x80-0xFF.
!
! N.B.:  Since this file contains UTF-8 encoded Unicode characters, the high-bit
! ISO-8859 characters must be encoded as octal escaped characters (along with
! some special ones that make Emacs font-lock mode happy, and of course the
! embedded newlines too).
!
! Note that xrdb does not strip leading whitespace after a backslash (only after
! the colon), so all these lines start with an extra tab character.
!
XFontSel*sampleText:	\
	`\264\250\047\0421lIi|\246\041¡/\3300Oo{[(<\253\273>)]},.;\072?\277\n\
	\251\256a\2522\2623\263u\265pP\266#\244\243$\242\245\260.\267,\270\261+=\254~_\255-\n\
	ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789\n\
	abcdefghijklmnopqrstuvwxyz\n\
	\040\041\042#$%&\047()*+,-./\072;<->?@[\\]^_`{|}~\n\
	\240\241\242\243\244\245\246\247\250\251\252\253\254\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\n\
	\300\301\302\303\304\305\306\307\310\311\312\313\314\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\n\
	\340\341\342\343\344\345\346\347\350\351\352\353\354\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377\n
!
! This set uses UTF-8 encoding directly, and adds three lines of some hopefully
! commonly used Unicode characters, adding first the Greek and Cyrillic
! alphabets, followed by a jumble of common/interesting Unicode characters.
!
XFontSel*sampleTextUCS:	\
	~`´¨\'\"1lIi|¦\041¡/DØ0Oo{[(<«»>)]},.;\072?¿\n\
	©®aª2²3³8BuµpP¶#¤£$¢¥°.·,¸±+=¬~_--\n\
	ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789\n\
	abcdefghijklmnopqrstuvwxyz\n\
	 \041\042#$%&\047()*+,-./\072;<->?@[\\]^_`{|}~\n\
	 ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿\n\
	ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞß\n\
	àáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\n\
	ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ\n\
	αβγδεζηθικλμνξοπρςτυφχψω\n\
	АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ\n\
	абвгдеёжзийклмнопрстуфхцчшщъыьэюя\n\
	–―†‡•…‰™ᴂﬁœᴈŠŸž€ \n\
	☺☹✝✚✡☥⎈☭☪∀∂∈ℝ∧∪∞π↑↗↨↻⇣┐┼╔╘►⑀₂ἠḂӥẄɐː⍎אԱა�\n\
	⌈⌉⌊⌋∏∑∫⊕⊖⊗⊘⊙⊚⊛∙∘′″‴∼∂√≔ⁱ⁰₀₁₂∧∨∃⊦∅∈∉⊂⊃⊆⊇⊄⋂⋃\n\
	※◆░▒␉␌␍␊␤␋┘┐┌└┼⎺⎻─⎼⎽├┤┴┬│≤≥≮≯≠≈≡£₿₠∎\n\
	‹›“”‘’„〖〗【】「」『』〈〉《》〔〕\n\
	•◦‣✓●■◆○□◇★☆♠♣♥♦♤♧♡♢♩♪♫♬♭♮♯☰☱☲☳☴☵☶☷\n\
	←→↑↓↔↖↗↙↘⇐⇒⇑⇓⇔⇗⇦⇨⇧⇩↞↠↟↡↺↻☞☜☝☟\n\
	☠☢☣☤♲♳⌬♨♿☉☼☾☽♀♂☯♔♕♖♗♘♙♚♛♜♝♞♟\n\
	に日本語を入れておくとよろしい。\n\
	林花謝了春紅 太匆匆, 無奈朝來寒雨 晚來風\n\
	胭脂淚 留人醉 幾時重, 自是人生長恨 水長東\n
!
! changequote([, ])
!
!
! GhostView:
!
! N.B.:  See also ~/.gv, which is also an X11 resource file, however it doesn't
! use CPP to process it, instead it reads it directly, so some resources have to
! be here of they're conditional on any xrdb symbol values!
!
! ifdef([COLOR], [], [
GV.gsX11Device:		-sDEVICE=x11mono
GV.gsX11AlphaDevice:	-sDEVICE=x11mono -dTextAlphaBits=4 -dGraphicsAlphaBits=2 -dMaxBitmap=10000000 -dNOPLATFONTS

! ])
