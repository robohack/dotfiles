# -*-conf-*-
#
# conf mode works best with conf-space-mode, but that font-locks the
# M4 statements weirdly.  Defining conf-space-keywords helps a bit.
#
# m4 mode is also helpful, but it doesn't properly honour matching of
# curly braces, nor strings
#
#	.ctwmrc - local startup for ctwm
#
#ident	"@(#)HOME:.ctwmrc	37.26	24/08/20 13:01:49 (woods)"
#
# N.B.:  To test changes first find the temp file output from the most recent
# run with '-k' and then do:
#
#	cat /var/tmp/ctwmrc.XXXXXX ~/.ctwmrc | m4 | less
#
# Note on macos temp files are in $(getconf DARWIN_USER_TEMP_DIR), and this
# value is often also in $TMPDIR.
#
# Things that affect the operation of various menus, etc.:
#
# Private xbm icon collection goes in ~/lib/bitmaps
# Private xpm icon collection goes in ~/lib/pixmaps
# Sounds to play go in ~/lib/sounds (eg "newmail").
#
# Environment variables used (set by .profile et al):
#
# RSH		- path to local rsh(1), or maybe ssh(1)
# SSH		- path to local ssh(1)
# X11BIN	- localized path for /usr/X11/bin or /usr/bin/X11, etc.
# X11PATH	- localized path for /usr/X11 or /usr/X11R6, etc.
# X11SERVER	- name of a possibly more powerful local server for X applications
# DISPLAY	- of course
# REMOTE_DISPLAY - suitable for local network access, with xauth sent
# PATH		- sometimes included in one passed to remote hosts
# AUDIOPLAYER	- program to invoke to play a sound file (eg. "auplay")
#
# Note macros expanded by M4, e.g. HOME, must be used, as they are obviously
# expanded first while environment variables are expanded at run/use time!  Thus
# environment variable names (in script settings) should be encosed in curly
# brackets, e.g. "${DISPLAY}".
#
# The current directory is always expected to be $HOME.
#
# ./.profile should provide proper path setup
#
# ./.shrc should provide a function "onx11server"

# Note that we could "comment" these macros out in .ctwmrc syntax, but they
# would still be visible to m4.

changequote([, ])

ifelse(eval(index(HOSTNAME, weird.com) >= 0), 1, [define(AT_WEIRD, [@weird.com])], [])
ifelse(eval(index(HOSTNAME, robohack.planix.com) >= 0), 1, [define(AT_WEIRD, [@robohack.planix.com])], [])

ifelse(eval(index(HOSTNAME, local) >= 0), 1, [define(AT_LOCAL, [@local])], [])

# this was the old SS20 with a bw2 monitor running NetBSD
ifelse(eval(index(HOSTNAME, very.weird.com) >= 0), 1, [define(AT_VERY_WEIRD, [@very.weird])], [])

ifelse(eval(index(HOSTNAME, very.local) >= 0), 1, [define(AT_VERY_LOCAL, [@very.local])], [])
ifelse(eval(index(HOSTNAME, very-old.local) >= 0), 1, [define(AT_VERY_LOCAL, [@very-old.local])], [])

# XXX it is very unfortunate that nothing is provided to identify the host
# environment (e.g. the `uname -s` value)!
#
ifdef([AT_VERY_LOCAL], [define(ON_OSX, [yes])])
ifelse(eval(index(HOSTNAME, macbook.local) >= 0), 1, [define(ON_OSX, [yes])], [])
ifelse(eval(index(HOSTNAME, macweird.local) >= 0), 1, [define(ON_OSX, [yes])], [])

# if ctwm is running on the server host then we want @X11SERVER menu choices...
ifelse([SERVERHOST], [CLIENTHOST], [define(USE_X11SERVER, [yes])], [])

# n.b.:  integer math is used, so these will only be approximate:
#
# XXX Too bad envrionment variables weren't also imported as macro definitions!
# SOOOooo many of these values are also computed and used in ~/.xinitrc!
#
define(HorizDPI, eval(((X_RESOLUTION * 100) / 3937) + ((((X_RESOLUTION * 1000) / 3937) % 10) >= 5)))
define(VertDPI, eval(((Y_RESOLUTION * 100) / 3937) + ((((X_RESOLUTION * 1000) / 3937) % 10) >= 5)))
define(ScreenDimX, eval(WIDTH / HorizDPI))
define(ScreenDimY, eval(HEIGHT / VertDPI))

# N.B.:  If true screen resolution is within 10% of 100DPI it could sense to
# claim 100DPI to avoid font-scaling artifacts for bitmap fonts, but since we
# already alias most font names that did refer to bitmap fonts into scalable
# fonts anyway, there is not much to gain
#
ifelse(eval((HorizDPI / 100 == 1) && (HorizDPI % 100 <= 10)), 1,
 [define(FontXDPI, [100])],
 [define(FontXDPI, [HorizDPI])]
)
ifelse(eval((VertDPI / 100 == 1) && (VertDPI % 100 <= 10)), 1,
 [define(FontYDPI, [100])],
 [define(FontYDPI, [VertDPI])]
)

ifelse(eval(X_RESOLUTION >= 8000 && Y_RESOLUTION >= 8000), 1,
 [define(BORDERWIDTH, [6]) define(TDBORDERWIDTH, [10])],
 [ifelse(eval(X_RESOLUTION >= 4500 && Y_RESOLUTION >= 4500), 1,
  [define(BORDERWIDTH, [4]) define(TDBORDERWIDTH, [8])],
  [define(BORDERWIDTH, [2]) define(TDBORDERWIDTH, [6])]
 )]
)

ifelse(eval(ScreenDimX > 12), 1,
 [define(ClockSize, [2])],
 [define(ClockSize, [1])]
)
define(ClockWidth, eval(HorizDPI * ClockSize))
define(ClockHeight, eval(VertDPI * ClockSize))
define(ClockOff, eval(ClockWidth + (2 * TDBORDERWIDTH)))

# hmmm.... maybe, some, xloads could be in a WindowBox:
#
#	 WindowBox "xloadbox" "320x100+0-0" {
#	                   "xload"
#	               }
#
define(XloadWidth, eval(HorizDPI * 1))
define(XloadHeight, eval(VertDPI / 2))

# Boolean flags
#
# keep these sorted as if the 'No' was stripped
#
AutoFocusToTransients	# there are some good things, and some VERY bad things, about this...
#AutoOccupy		# Definitely not a good idea....
AutoRelativeResize
AutoRaiseIcons
ifelse(eval(PLANES <= 8), 1, [BeNiceToColormap], [])
BorderResizeCursors
#NoCaseSensitive	# only affects iconmanager?
CenterFeedbackWindow
#NoClickToFocus		# OBVIOUSLY! (xxx but with the "No" it is unrecognized by 4.0.3)
ClientBorderWidth
DecorateTransients
DontMoveOff		# unfortunately also forces clients to resize
DontPaintRootWindow
NoGrabServer
NoIconManagerFocus	# also, obviously!
NoMenuShadows
NoRaiseOnMove
NoRaiseOnResize
NoShowOccupyAll
PackNewWindows
RaiseOnClick		# xxx because "RaiseOnClickButton 1" doesn't seem to work...
RestartPreviousState	# only useful when restarting the WM (saves to X11 server memory)
ReallyMoveInWorkspaceManager
#ReverseCurrentWorkspace
SaveWorkspaceFocus	# new in 3.8.1
ShowWorkSpaceManager
SchrinkIconTitles	# a spello, fixed in 4.?.? (????)
ShortAllWindowsMenus
SortIconManager
#StayUpMenus
StartInMapState
SunkFocusWindowTitle
#TransientHasOccupation # DNE: make sure transients stay with their leader!
UseThreeDBorders
#UseThreeDIconBorders	# XXX apparently it never did anything anyway
UseThreeDIconManagers
UseThreeDMenus
UseThreeDTitles
ifelse(eval(PLANES > 8), 1, [UseThreeDWMap], [])	# this is way too wasteful of colours....

# variables with simple values
#
# n.b.:  resolutions are in pixels per metre, for some stupid reason....
# so 4500 dpM is just over 110 dpi
#
BorderWidth			BORDERWIDTH	# has no effect when UseThreeDBorders is on
ifelse(eval(X_RESOLUTION >= 4500 && Y_RESOLUTION >= 4500), 1,
[
BorderShadowDepth		4	# should allow more on >8-bit displays
TitleButtonShadowDepth		5
TitleShadowDepth		5
WMgrButtonShadowDepth		5
IconBorderWidth			5
IconManagerShadowDepth		5
MoveDelta			12
MoveOffResistance		100
MovePackResistance		100
Zoom				16	# just for creation and destruction?
], [
BorderShadowDepth		2	# should allow more on >8-bit displays
TitleButtonShadowDepth		3
TitleShadowDepth		3
WMgrButtonShadowDepth		3
IconBorderWidth			3
IconManagerShadowDepth		3
MoveDelta			4
MoveOffResistance		50
MovePackResistance		50
Zoom				12
])
ThreeDBorderWidth		TDBORDERWIDTH	# has no effect unless UseThreeDBorders is on])

ConstrainedMoveTime		600	# 400 seems a tad too quick for a double-click
FramePadding			0
IconifyStyle			"normal"
MaxIconTitleWidth		500
MaxWindowSize			"eval(WIDTH * 2)[x]eval(HEIGHT * 2)"	# not everyone plays fair..., default is "30000x30000"
OpaqueMoveThreshold		100	# window % of screen size
OpaqueResizeThreshold		100	# window % of screen size
OpenWindowTimeout		15
# XXX this doesn't seem to work...
RaiseOnClickButton		1
RandomPlacement			"on"	# I'm tired of dragging so many windows around!
UsePPosition			"non-zero"
XMoveGrid			1
YMoveGrid			1

#
# Best is to arrange one's font-path to get the desired one first....
#

#TitleFont	"-*-helvetica-bold-r-*-*-*-100-HorizDPI-VertDPI-*-*-iso10646-1"
TitleFont	"-*-liberation sans-bold-r-normal--*-100-FontXDPI-FontYDPI-p-0-iso10646-1"

#IconFont	"-*-helvetica-bold-r-*-*-*-80-HorizDPI-VertDPI-*-*-iso10646-1"
IconFont	"-*-liberation sans-medium-r-normal--*-80-FontXDPI-FontYDPI-p-0-iso10646-1"

#IconManagerFont "-*-helvetica-medium-r-*-*-*-80-HorizDPI-VertDPI-*-*-iso10646-1"
IconManagerFont "-*-liberation sans-medium-r-normal--*-80-FontXDPI-FontYDPI-p-0-iso10646-1"

#MenuFont	"-*-helvetica-medium-r-*-*-*-80-HorizDPI-VertDPI-*-*-iso10646-1"
MenuFont	"-*-liberation sans-medium-r-normal--*-80-FontXDPI-FontYDPI-p-0-iso10646-1"

#ResizeFont	"-*-courier-bold-r-*-*-*-240-HorizDPI-VertDPI-*-*-iso10646-1"
ResizeFont	"-*-liberation mono-bold-r-normal--*-240-FontXDPI-FontYDPI-m-0-iso10646-1"

#WorkSpaceFont	"-*-helvetica-*-r-*--10-*-*-*-*-*-*-*"
WorkSpaceFont	"-*-liberation sans-medium-r-normal--*-70-FontXDPI-FontYDPI-p-0-iso10646-1"

# XXX DefaultFont is not yet configurable (it should first use this, or else the "*font" resource, or lastly the compiled in font)
#DefaultFont	"-*-courier-bold-r-*-*-*-100-HorizDPI-VertDPI-*-*-iso10646-1"
#DefaultFont	"-*-liberation mono-medium-r-normal--*-100-FontXDPI-FontYDPI-m-0-iso10646-1"

# Define some useful functions for motion-based actions.
# These must come after fonts....
#
ChangeWorkspaceFunction		!"${AUDIOPLAYER} HOME/lib/sounds/wm-wschange &"
IconifyFunction			!"${AUDIOPLAYER} HOME/lib/sounds/wm-iconify &"
DeIconifyFunction		!"${AUDIOPLAYER} HOME/lib/sounds/wm-deiconify &"
DefaultFunction			!"${AUDIOPLAYER} HOME/lib/sounds/wm-default &"
# this is the default...
#WindowFunction			{ f.deiconify f.raise }

Color {
	# highlit window borders
	BorderColor		"SteelBlue"
	# unused?
	BorderTileBackground	"grey70"
	# un-highlit window borders
	BorderTileForeground	"grey50"
	DefaultBackground	"LightSteelBlue"
	DefaultForeground	"blue4"
	IconBackground		"blue4"
	IconForeground		"White"
	IconBorderColor		"gray50"
	IconManagerBackground	"blue4"
	IconManagerForeground	"White"
	IconManagerHighlight	"yellow"
	# XXX hmmm....  the CHANGES file says:
	#
	#  * If there is neither MapWindowBackground, nor MapWindowForeground in the
	#    config file,the window title colors are used for the small windows in the
	#    workspace map.
	#
	# and the manual page concurs:
	#
	#	If there is neither MapWindowBackground, nor MapWindowForeground
	#	the window title colors are used.
	#
	# by which I think it means CTWM's "TitleForeground" color is used....
	#
	MapWindowBackground	"LightSteelBlue" {
		# XXX unfortunately the "root*" trick doesn't work very well
		# since these colours are only assigned if the window name, at
		# the moment the window is created, matches; or if Ctwm is
		# restarted, e.g. after one runs "su"...
		"root*" "red"
		"xterm" "SteelBlue"
		"emacs"	"yellow"
		"tkined" "red"
	}
	MapWindowForeground	"Black" {
		# better contrast for these ones....
		"xterm" "White"
		"tkined" "White"
	}
	MenuBackground		"DarkGreen"
	MenuForeground		"White"
	MenuTitleBackground	"DarkSeaGreen"
	MenuTitleForeground	"White"
	MenuShadowColor		"gray50"
	TitleBackground		"blue"	# default is white
	TitleForeground		"White" # default is black
}

Monochrome {
	BorderColor		"grey70"
	BorderTileBackground	"grey6"
	BorderTileForeground	"grey50"
	DefaultBackground	"Black"
	DefaultForeground	"White"
	IconBorderColor		"grey3"
	MapWindowBackground	"White"
	MapWindowForeground	"Black"
	MenuBackground		"Black"
	MenuForeground		"White"
	MenuTitleBackground	"grey98"
	MenuTitleForeground	"Black"
	MenuShadowColor		"gray50"
	TitleBackground		"blue"
	TitleForeground		"White"
}

ifelse(COLOR, Yes, [

define(OPT_XTERM_TN, [-tn xterm-256color])
define(XLOAD_HL, [red])

MapWindowCurrentWorkSpace {
	"yellow"		# border
	"grey50"		# background
	"grey98"		# foreground
	# bitmap
}
MapWindowDefaultWorkSpace {
	"DarkGreen"		# border
	"grey98"		# background
	"grey50"		# foreground
	# bitmap
}

# Colours to be stored in the root window's _MIT_PRIORITY_COLORS
# property.  Clients _may_ elect to preserve these values when
# installing their own colormap.  Saving colours used in window
# manager features, such as borders, titles, and menus, could help
# avoid annoying colour-map flashing just because the cursor strays
# out, or when using the window menu.
#
# XXX Hopefully it's not a waste when the same colour is listed
# multiple times in this list!
#
# could only do this if PLANES <= 8
#
#SaveColor {
#	BorderColor
#	BorderTileBackground
#	BorderTileForeground
#	DefaultBackground
#	DefaultForeground
#	MenuBackground
#	MenuForeground
#	MenuTitleBackground
#	MenuTitleForeground
#	MenuShadowColor
#	TitleBackground
#	TitleForeground
#}

# else not COLOR
], [

define(XLOAD_HL, [grey90])
define(OPT_XTERM_TN, [])

MapWindowCurrentWorkSpace {
	"White"
	"grey50"
	"grey98"
}
MapWindowDefaultWorkSpace {
	"Black"
	"grey98"
	"grey50"
}

# end not COLOR
])

# Give focus to windows whether they asked or not.  The window list is optional.
#
# First appeared in 4.0.0
#
#ForceFocus { win-list }

# put the icon to the right-edge of its title -- this seems to work
# best for icon titles which expand when hovered over, and when the
# IconRegion gravity is to the East
#
IconJustification		"right"

# for Xterms we use two different macros to set the geometry of small
# and large windows.  These macros are set based on the estimated size
# of the screen.
#
#	5x8 == Tiny
#	7x14 == Small
#	8x13 == Medium
#	9x15 == Large
#
# Notes:
#
# - setting -fs (faceSize) to 7.5 makes the TrueType font size most closely
#   match the size of the default "fixed" bitmap font's size.
#
# - Unfortunately on the iMac 27" with 2560x1440 there is not quite room enough
#   horizontally for the three standard xterms with a point size of 10 for the
#   big ones.
#
ifelse(eval(WIDTH >= 6016 && HEIGHT >= 3384), 1, [define(OPT_BIG_XTERM, [-geometry 132x100+0+0 -fs 9])],
 [ifelse(eval(WIDTH >= 2560 && HEIGHT >= 1440), 1, [define(OPT_BIG_XTERM, [-geometry 132x82+0+0 -fs 9])],
  [ifelse(eval(WIDTH >= 1600 && HEIGHT >= 1280), 1, [define(OPT_BIG_XTERM, [-geometry 117x82+0+0 -fs 9])],
   [ifelse(eval(WIDTH >= 1600 && HEIGHT >= 1200), 1, [define(OPT_BIG_XTERM, [-geometry 117x77+0+0 -fs 9])],
    [ifelse(eval(WIDTH >= 1280 && HEIGHT >= 1024), 1, [define(OPT_BIG_XTERM, [-geometry 100x50+0+0 -fs 7.5])],
     [define(OPT_BIG_XTERM, [-fs 7.5 -geometry 80x40+0+0])]
    )]
   )]
  )]
 )]
)
# With CommitMono font this could be 50 high
# With Liberation Mono and CommitMono font this could be 91 wide
define(OPT_LITTLE_XTERM, [-fs 7.5 -geometry 80x45-0-${XconsoleVoff}])

# Xterm fonts via Xft with '-fa' (assume all systems are "new" enough)
#
define(OPT_XTERM_FA, [-fa 'CommitMono'])
define(OPT_UXTERM_FA, [-fa 'CommitMono'])

# on OSX Xterm isn't configured to record logins properly with "-ls"
#
ifdef([ON_OSX], [define(OPT_XTERM_LOGIN, [-e login -pf USER])])

# Can only be one directory!  Uses resource bitmapFilePath first...
#
IconDirectory	"~/lib/bitmaps"

ifdef([XPM], [
PixmapDirectory	"~/lib/pixmaps:~/lib/icons:/usr/X11/include/X11/pixmaps:/usr/X11/include/X11/pixmaps/ctwm:/usr/X11R7/include/X11/pixmaps:/usr/X11R7/include/X11/pixmaps/ctwm:/usr/X11R6/include/X11/pixmaps:/usr/X11R6/include/X11/pixmaps/ctwm:/usr/pkg/share/ctwm/images:/opt/pkg/share/ctwm/images:/usr/local/share/ctwm/images:"
])

IconManagerDontShow {
	"asclock"
	"lmclock"
	"oclock"
	"swisswatch"
	"swissclock"
	"WorkSpaceManager"
	"xbiff"
	"XBuffy"
	"xclock"
	"xcpustate"
	"xeyes"
	"xload"
	"xlogo"
	"xnetload"
	"xosview"
	"XSysStats"
}

ifdef([XPM], [UnknownIcon "xpm:unknown1.xpm"], [UnknownIcon "unknown.xbm"])

# N.B.:  it may be useful to enable ForceFocus on "hi-res" displays where any
# default icons may be too small, but of course this son't be useful
# until/unless larger icons are known to be available!

Icons {
	"Untitled"	"Excl"
	"xcmap"		"plaid"
	"XConsole"	"terminal"
  ifdef([XPM], [
	"auedit"	"xpm:audio_editor.xpm"
	"Control"	"xpm:mixer.xpm"
#	"emacs"		"xpm:emacs.xpm"
	"ghostview"	"xpm:ghostview.xpm"
	"log0"		"xpm:document-simple.xpm"
	"log1"		"xpm:document-simple.xpm"
	"log2"		"xpm:document-simple.xpm"
	"Mosaic"	"xpm:xmosaic.xpm"
#	"MPEG Play"	"xpm:movie.xpm"
	"pine"		"xpm:mail1.xpm"
	"spider"	"xpm:spider.xpm"
	"swissclock"	"xpm:xclock.xpm"
#	"xanim"		"xpm:movie.xpm"
	"xcalendar"	"xpm:datebook.xpm"
	"xclipboard"	"xpm:clipboard.xpm"
	"xedit"		"xpm:xedit.xpm"
	"xftp"		"xpm:xftp.xpm"
#	"xfractint"	"xpm:mandelbrot.xpm"
	"Xman"		"xpm:xman.xpm"
	"xpostit"	"xpm:postit.xpm"
	"XSm"		"xpm:xgrab.xpm"
	"xterm"		"xpm:term.xpm"
   ], [
	"emacs"		"gnu.xbm"
	"pine"		"letters"
	"xterm"		"Term"
	"lmclock"	"clock.xbm"
	"swissclock"	"clock.xbm"
   ])
}

# XXX for hi-res monitors we need new, bigger, cursors, but what about
# app-specific ones, such as Xterm's?
#
Cursors {
	Frame		"top_left_arrow"
	Title		"top_left_arrow"
	Icon		"top_left_arrow"
	IconMgr		"top_left_arrow"
	Move		"fleur"
	Resize		"fleur"
	Menu		"sb_left_arrow"
	Button		"hand2"
	Wait		"watch"
	Select		"target"
	Destroy		"pirate"
}

# XXX in theory we could/should use TWM_TYPE to protect all the
# WorkSpaces related stuff so that it's only seen if the value is
# "ctwm" -- then we could maybe still use this same file with twm.
# (and/or "vtwm" for use with vtwm, and maybe even "tvtwm" for use
# with tvtwm too, as they each also have a workspace manager, but
# using the pan/view style instead of the separate virtual desktop
# style of ctwm)

# The positioning of the WorkSpace window seems to ignore borders or
# something -- i.e. it's not the same as an ordinary client.  You need
# to specify the horizontal position 10 pixels East of where you'd
# position a client.
#
# Note also that if you manually resize the WorkSpace window the
# geometry shown while doing so bears no relation to the actual
# geometry in pixels, as given here.
#
# The first one is for the likes of "very" where there's room for the xloads.
# The second is for the likes of a modern macbook.
# The third is for the likes of an NCD HMX or 19c with room for a big clock.
# The default is for small screens where there's only room for a small clock.
#
# for the downstairs machine this can move 90 to the left (leaving room for
# a 132-column window at the default font)
#
ifelse(SERVERHOST, xtremely.weird.com, [
 define(WS_COLS, [2])
 define(WS_ROWS, [4])
], [
 define(WS_COLS, [3])
 define(WS_ROWS, [4])
])
define(WS_HEIGHT, eval(HEIGHT / 30 * WS_ROWS))
define(WS_WIDTH, eval(WIDTH / 30 * WS_COLS))
define(WS_GEOM, WS_WIDTH[x]WS_HEIGHT)
define(WS_OFF, eval(ClockOff + XloadWidth + (2 * TDBORDERWIDTH)))
#
WorkSpaceManagerGeometry	"WS_GEOM-WS_OFF+0" WS_COLS

# Note WS_ROWS x WS_COLS should be fulfilled by WorkSpaces names to match above
#
ifelse(SERVERHOST, xtremely.weird.com, [
WorkSpaces {
	"Consoles"
	"TkIned"

	"Testing"
	"Browsing"

	"Coding"
	"Work 1"

	"Work 2"
	"Play"
}
], [
WorkSpaces {
	"Desktop"
	"Remote VMs"
	"Mail"

	"Home"
	"Xenful VMs"
	"Central"

	"Coding"
	"Testing 1"
	"FreeBSD"

	"Work 1"
	"Xentastic VMs"
	"Work 2"
}
])

#Occupy {
#    ifelse(SERVERHOST, xtremely.weird.com,
#	[WorkSpace	"TkIned"	{ "tkined" } ])
#	WorkSpace	"Browsing"	{ "Netscape" "mozilla-bin" }
#}

# these match the Window Name (or "Name =" in the identify panel)
#
OccupyAll {
	"asclock"
	"Calculator"
	"NCD User Services:  Console"
	"NCD User Services:  Show Memory"
	"OccupyAll"		# a trick used for starting xterms (that doesn't work???)...
	"lmclock"
	"oclock"
	"swisswatch"
	"swissclock"
	"taglog"
	"WorkSpaceManager"
	"xbiff"
	"xbuffy"		# only the main box window
	"xclock"
	"xconsole"
	"xcpustate"
	"xeyes"
	"xload"
	"xlogo"
	"xmailwatcher"
	"xnetload"
	"xosview"
	"xsm"
	"XSysStats"
	"XMMS"
	"XMMS Equalizer"
	"XMMS Playlist"
	"Dual Spectogram 1.2"
}

IconRegionAlignement		"border"
IconRegionJustification		"border"

# Note it seems the IconRegion must include the expanded icon title,
# which can be a bit long when we have pathnames in xterm titles.
#
# This isn't such a problem though if the "gravity" is North East and
# when the IconJustification is to the right -- the IconRegion can
# then be expanded to the left over other windows and normally, so
# long as there aren't too many icons to fit in the actual desired
# area, then expanding titles will have the needed room to expand to
# the left.
#
# A 10-pixel X 10-pixel grid keeps icons packed about as tight as
# you'd ever want them to be.  This is of course way too small a grid
# to keep arbitrary sized icons centred in a box.  It also means
# little icons can mess up the arrangement of normal-sized icons.  Too
# bad we can't force them on the grid such that they overlap if
# they're too big.  Alternately if the arrangement was always shuffled
# on every change such that all similar sized icons were kept
# together....  And how about shrinking them to always fit and using a
# magnifier like the Aqua dock?
#
# On the big screen we keep a little xterm open above xconsole in the
# bottom right so we keep the icon region above that.  On the
# mid-sized screens we keep icons just above the xconsole (even though
# it's rarely kept open on such smaller screens).
#
# (run through M4 as described above then use "xlogo -geometry XXXxYYY" to see
# where this will be!)
#
# xxx this may not be wide enough on smaller screens, but on a big hi-res screen
# it should be OK
#
define(IR_GEOM, eval(WS_WIDTH + WS_OFF + TDBORDERWIDTH)[x]eval(HEIGHT / 4)[-0+]eval(WS_HEIGHT + (2 * XloadHeight) + (2 * TDBORDERWIDTH)))
ifelse(eval(X_RESOLUTION >= 8000 && Y_RESOLUTION >= 8000), 1,
 [define(IR_GRID, [100])],
 [ifelse(eval(X_RESOLUTION >= 4500 && Y_RESOLUTION >= 4500), 1,
  [define(IR_GRID, [50])],
  [define(IR_GRID, [10])]
 )]
)
IconRegion	"IR_GEOM" North East IR_GRID IR_GRID

NoTitle {
	"asclock"
	"lmclock"
	"oclock"
	"swisswatch"
	"swissclock"
	"WorkSpaceManager"
	"xbiff"
	"xbuffy"		# only the main box window
	"xclock"
	"xcpustate"
	"xeyes"
	"xli"
	"xload"
	"xlogo"
	"xnetload"
	"xosview"
	"XSysStats"
	"xv"
	"xwud"
	"XMMS"
	"XMMS Equalizer"
	"XMMS Playlist"
	"Dual Spectogram 1.2"
}

NoHighlight {
	"swisswatch"
	"swissclock"
	"xeyes"
}

WarpCursor {
	"emacs"		# damn thing gets a resource name based on argv[0]!
	"Links"
	"xterm"
	"xcalc"
	"xmahjongg"
}

WindowGeometries {
	# xmahjongg cannot handle standard geometry positioning (it does do size)
	"xmahjongg"	"2000x1500+2200+0"
}

# These have an optional window list parameter
#
DontSqueezeTitle
NoTitleHighlight
OpaqueResize
OpaqueMove

Function "forcemove-or-lower"	{ f.forcemove f.deltastop f.lower }
Function "forcemove-or-raise"	{ f.forcemove f.deltastop f.raise }
Function "forcemove-or-iconify"	{ f.forcemove f.deltastop f.iconify }
Function "move-or-lower"	{ f.move f.deltastop f.lower }
Function "move-or-raise"	{ f.move f.deltastop f.raise }
Function "move-or-iconify"	{ f.move f.deltastop f.iconify }
Function "movepack-or-lower"	{ f.movepack f.deltastop f.lower }
Function "movepack-or-raise"	{ f.movepack f.deltastop f.raise }
Function "movepack-or-iconify"	{ f.movepack f.deltastop f.iconify }
Function "resize-or-raise"	{ f.raise f.deltastop f.resize }
Function "resize-or-lower"	{ f.lower f.deltastop f.resize }
#Function "restore-colormap"	{ f.colormap "default" f.lower }

# Set some useful bindings.  Sort of uwm-ish, sort of simple-button-ish
#
Button1 =		: root		: f.menu "quickies"
Button2 =		: root		: f.menu "TwmWindows"
Button3 =		: root		: f.menu "defops"

Button1 = control	: root		: f.menu "TwmAllWindows"
Button2 = control	: root		: f.menu "TwmIcons"
Button3 = control	: root		: f.menu "preferences"

# Note "meta" here means the "option" key on OSX Xquartz
#
Button1 = meta		: root		: f.menu "applications"
Button2 = meta		: root		: f.menu "TwmAllWindows"
Button3 = meta		: root		: f.menu "wmops"

# shift modifier doesn't seem to work (at least not on an NCD HMX)
# the un-alterd buttons get clobbered!
#Button1 = shift	: root		: f.menu "xterm"
#Button2 = shift	: root		: f.menu "TwmIcons"
#Button3 = shift	: root		: f.menu "some-other-menu"

Button1 = control	: icon		: f.menu "winops"
Button2 = control	: icon		: f.iconify
Button3 = control	: icon		: f.raiselower

Button1 = meta		: icon|window	: f.function "forcemove-or-raise"
Button2 = meta		: icon|window	: f.function "forcemove-or-iconify"
Button3 = meta		: icon|window	: f.function "forcemove-or-lower"

Button1 =		: title		: f.function "movepack-or-raise"
Button2 =		: title		: f.raiselower
Button3 =		: title		: f.function "movepack-or-lower"

Button1 =		: frame		: f.function "resize-or-raise"
Button2 =		: frame		: f.raiselower
Button3 =		: frame		: f.function "resize-or-lower"

Button1 = meta		: frame|title	: f.function "forcemove-or-raise"
Button2 = meta		: frame|title	: f.raiselower
Button3 = meta		: frame|title	: f.function "forcemove-or-lower"

Button1 =		: icon		: f.function "move-or-iconify"
Button2 =		: icon		: f.iconify
Button3 =		: icon		: f.lower

Button1 = meta		: icon		: f.function "forcemove-or-iconify"
Button2 = meta		: icon		: f.iconify
Button3 = meta		: icon		: f.lower

Button1 =		: iconmgr	: f.iconify
Button2 =		: iconmgr	: f.raise
Button3 =		: iconmgr	: f.lower

"Help"	=		: root		: f.version

"F11"	=		: root		: f.prevworkspace
"F12"	=		: root		: f.nextworkspace

"Left"	= meta		: root		: f.leftworkspace
"Right"	= meta		: root		: f.rightworkspace
"Down"	= meta		: root		: f.downworkspace
"Up"	= meta		: root		: f.upworkspace

"Left"	= mod2		: root		: f.leftworkspace
"Right"	= mod2		: root		: f.rightworkspace
"Down"	= mod2		: root		: f.downworkspace
"Up"	= mod2		: root		: f.upworkspace

# Hmmm... these seem to be delivered to the app regardless....
#"Left"	=		: frame|title	: f.jumpleft "2"
#"Right" =		: frame|title	: f.jumpright "2"
#"Down"	=		: frame|title	: f.jumpdown "2"
#"Up"	=		: frame|title	: f.jumpup "2"
#"Left"	= meta		: frame|title	: f.pack "left"
#"Right" = meta		: frame|title	: f.pack "right"
#"Up"	= meta		: frame|title	: f.pack "top"
#"Down"	= meta		: frame|title	: f.pack "bottom"
#"Left"	= shift|meta	: frame|title	: f.fill "left"
#"Right" = shift|meta	: frame|title	: f.fill "right"
#"Up"	= shift|meta	: frame|title	: f.fill "top"
#"Down"	= shift|meta	: frame|title	: f.fill "bottom"


# icons and menus/operations for window "Title" buttons
#
ifdef([XPM], [
LeftTitleButton ":xpm:menu" = f.menu "winops"
LeftTitleButton	":xpm:cross" = f.delete
#
RightTitleButton ":xpm:vbar" = f.menu "fills"
RightTitleButton ":xpm:box" = f.menu "zooms"
], [
LeftTitleButton "menu16" = f.menu "winops"
LeftTitleButton	"star" = f.delete
#
RightTitleButton "scales" = f.menu "fills"
RightTitleButton "icon" = f.menu "zooms"
])

#
#	And the menus, with all of the usual things...
#
menu "quickies"
{
	"Short Cuts"		f.title
	"Move & Pack"		f.movepack
	"Move"			f.move
	"Resize"		f.resize
	"Lower"			f.lower
	"Raise"			f.raise
	"Iconify"		f.iconify
	"Identify"		f.identify
	"Occupy ..."		f.occupy
	"Occupy All"		f.occupyall
	"Vanish"		f.vanish
	""			f.separator
 ifdef([ON_OSX], [
	""			f.separator
	"Pasteboard Copy"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM -T 'Paste text to PasteBoard here' -e pbcopy &"
	""			f.separator
 ])
	"Toggle workspace"	f.togglestate
	"Screen Refresh"	f.refresh
	"Window Refresh"	f.winrefresh
	"Save"			f.saveyourself
	""			f.separator
	"WinDelete"		f.delete
	"WinDelete or Destroy"	f.deleteordestroy
	"Kill"			f.destroy
	""			f.separator
	"Xauth to..."		f.menu "xauths"
	""			f.separator
	"emacs @CLIENTHOST"	!"${MY_EMACS} -fh &"
 ifdef([USE_X11SERVER], [
	"emacs @X11SERVER"	!". ./.shrc; onx11server ${X11SERVER} \"${MY_EMACS} -fh\" &"
 ])
 ifdef([AT_LOCAL], [
	"emacs @more"		!". ./.shrc; onx11server more.local 'emacs -fh' &"
 ])
	"Emacs Everywhere..."	f.menu "emacs"
	#
	""			f.separator
	"links -g @CLIENTHOST"	!"links -g &"
 ifdef([USE_X11SERVER], [
	"links -g @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} 'links -g' &"
 ])
 ifdef([AT_LOCAL], [
	"links -g @more"	!". ./.shrc; onx11server -n more.local 'links -g' &"
 ])
	# xxx unfortunately duckduckgo.com isn't very usable with links
	"DDG something"		!"links -g https://html.duckduckgo.com/html/ &"
	"Google something"	!"links -g https://google.ca/ &"
 ifelse([ON_OSX], [
	""			f.separator
	"Mac OS X Apps..."	f.menu "osx-apps"
 ], [
	""			f.separator
	"Xclipboard"		!"xclipboard &"
 ])
	""			f.separator
	"UXterm @CLIENTHOST"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS} OPT_XTERM_LOGIN &"
	"UXterm-big @CLIENTHOST"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS} OPT_XTERM_LOGIN &"
	#
 ifdef([USE_X11SERVER], [
	"Xterm @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"xterm OPT_XTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"Xterm-big @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"xterm OPT_XTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
 ])
 ifdef([AT_LOCAL], [
	"UXterm @more"		!". ./.shrc; onx11server -n more.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @more"	!". ./.shrc; onx11server -n more.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
 ])
	"Xterm's Everywhere..."	f.menu "xterms"
	""			f.separator
	"Console Server"	f.menu "consoles"
	""			f.separator
	"TermSrvr Telnets"	f.menu "termservers"
	""			f.separator
 ifelse([ON_OSX], [
 ], [
	"Xlock"			!"xlock -mode flame &"
 ])
	"Exit..."		f.menu "exit"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "consoles"
{
	"Console Server"	f.title
  define(CONSOLE_REP, [
	"$1 []"			!"uxterm OPT_UXTERM_FA OPT_XTERM_TN -fg lightgreen -bg black -geometry 132x66 -fn 5x7 -fbx -cn -rw -sb -si -sk -sl 2048 -n $1 -T '\"$1 Virtual Console\"' -e console $1 &"
  ])
	CONSOLE_REP(xenful)
	CONSOLE_REP(nbtcur)
	CONSOLE_REP(more)
	""			f.separator
	CONSOLE_REP(xentastic)
	CONSOLE_REP(nbtest)
	CONSOLE_REP(nb10)
	CONSOLE_REP(nbday)
	CONSOLE_REP(fezzik)
	""			f.separator
	CONSOLE_REP(once)
# powered off, but enabled in tserver
	CONSOLE_REP(isit)
# not connected
#	CONSOLE_REP(bbb-1)
#	CONSOLE_REP(rpi-1)
#	CONSOLE_REP(lilbit)
#	CONSOLE_REP(building)
#	CONSOLE_REP(future)
#	CONSOLE_REP(freebsd)
#	CONSOLE_REP(historically)
#	CONSOLE_REP(whats)
#	CONSOLE_REP(flipping)
# running under UTM on very, but with vga console
#	CONSOLE_REP(nbt)
#	CONSOLE_REP(nbt2)
  undefine(CONSOLE_REP)
	""			f.separator
	"Pin this menu"		f.pin
}

menu "termservers"
{
	"Term Srvr Telnets"	f.title
	"telnet controlling"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN ${XTERM_OPTS} -n controlling -T 'controlling Virtual Console' -e telnet controlling.local 2000 &"
	""			f.separator
  define(CONTROLLING_REP, [
	"Controlling-20$1"	!"uxterm OPT_UXTERM_FA -geometry 132x66 -fn 5x7 OPT_XTERM_TN ${XTERM_OPTS} -n Ctrl20$1 -T 'Controlling-20$1' -e telnet controlling.local 20$1 &"
  ])
###	CONTROLLING_REP(01)	# this is the physical console
	CONTROLLING_REP(02)
	CONTROLLING_REP(03)
	CONTROLLING_REP(04)
	CONTROLLING_REP(05)
	CONTROLLING_REP(06)
	CONTROLLING_REP(07)
	CONTROLLING_REP(08)
  undefine(CONTROLLING_REP)
	""			f.separator
	"Pin this menu"		f.pin
}

menu "defops"
{
	"TWM_TYPE - Version TWM_VERSION"	f.title
	"Window Operations..."	f.menu "winops"
	"Window Manager..."	f.menu "wmops"
	""			f.separator
	"Applications..."	f.menu "applications"
	"Preferences..."	f.menu "preferences"
	""			f.separator
	"Exit..."		f.menu "exit"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "winops"
{
	"Window Operations"	f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"Move"			f.move
	"MovePack"		f.movepack
	"MovePush"		f.movepush
	""			f.separator
	"Resize"		f.resize
	""			f.separator
	"Raise"			f.raise
	"Lower"			f.lower
	"Circle Up"		f.circleup
	"Circle Down"		f.circledown
	""			f.separator
	"Occupy All"		f.occupyall
	"Vanish"		f.vanish
	"Occupy ..."		f.occupy
	""			f.separator
	"Refresh"		f.winrefresh
	"Save"			f.saveyourself
	"Identify"		f.identify
	""			f.separator
	"Zoom..."		f.menu "zooms"
	"Pack..."		f.menu "packs"
	"Fill..."		f.menu "fills"
	""			f.separator
	"Squeeze (toggle)"	f.squeeze
	"Iconify"		f.iconify
	"DeIconify"		f.deiconify
	""			f.separator
	"Focus"			f.focus
	"Unfocus"		f.unfocus
	""			f.separator
	"Delete"		f.delete
	"Delete Or Destroy"	f.deleteordestroy
	"Kill"			f.destroy
	""			f.separator
	"Pin this menu"		f.pin
}

menu "wmops"
{
	"Window Manager"	f.title
	"Icon Manager..."	f.menu "iconmgr"
	"WorkSpace Summary..."	f.menu "TwmWindows"
	"Window Summary..."	f.menu "TwmAllWindows"
	""			f.separator
	"Toggle workspace"	f.togglestate
	"ShowWorkSpaceManager"	f.showWorkspaceMgr
	"HideWorkSpaceManager"	f.hideWorkspaceMgr
	"Adopt Window"		f.adoptwindow
	"Identify Window"	f.identify
	""			f.separator
	"Refresh Screen"	f.refresh
	"Refresh Window"	f.winrefresh
	"Save Window"		f.saveyourself
	""			f.separator
	"Restart TWM_TYPE"	f.restart
	"About TWM_TYPE TWM_VERSION"	f.version
	""			f.separator
	"Pin this menu"		f.pin
}

menu "packs"
{
	"Window Packing"	f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"To-the-Left"		f.pack "left"
	"To-the-Right"		f.pack "right"
	"To-the-Top"		f.pack "top"
	"To-the-Bottom"		f.pack "bottom"
}

menu "zooms"
{
	"Zoom to Screen"	f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"Top-to-bottom"		f.zoom
	"Full-Screen"		f.fullzoom
	"To-the-Left"		f.leftzoom
	"To-the-Right"		f.rightzoom
	"To-the-Top"		f.topzoom
	"To-the-Bottom"		f.bottomzoom
}

menu "fills"
{
	"Zoom to Fill"		f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"Top-to-bottom"		f.zoom
	"Full-Screen"		f.fullzoom
	"Fill-to-the-Left"	f.fill "left"
	"Fill-to-the-Right"	f.fill "right"
	"Fill-to-the-Top"	f.fill "top"
	"Fill-to-the-Bottom"	f.fill "bottom"
}

menu "iconmgr"
{
	"Icon Manager"		f.title
	"Show Iconmgr"		f.showiconmgr
	"Hide Iconmgr"		f.hideiconmgr
	"Sort"			f.sorticonmgr
	""			f.separator
	"Next"			f.nexticonmgr
	"Previous"		f.previconmgr
	""			f.separator
	"Up"			f.upiconmgr
	"Down"			f.downiconmgr
	"Forward"		f.forwiconmgr
	"Back"			f.backiconmgr
	""			f.separator
	"Left"			f.lefticonmgr
	"Right"			f.righticonmgr
	""			f.separator
	"Pin this menu"		f.pin
}

# "personal preference" adjustments
menu "preferences"
{
	"Preferences"		f.title
	"Viewres"		!"viewres &"
	"Editres"		!"editres &"
	"xprop"			!"xprop &"
	"Query"			!"xset q"
	"Xkeycaps"		!"xkeycaps &"
	"Auto Repeat On"	!"xset r on"
	"Auto Repeat Off"	!"xset r off"
	"Bell On"		!"xset b 100 800"
	"Bell Off"		!"xset b 0"
	"Click On"		!"xset c on"
	"Click Off"		!"xset c off"
	"Mouse Fast"		!"xset m 9 5"
	"Mouse Normal"		!"xset m 6 3"
	"Mouse Slow"		!"xset m 1 1"
	"Mouse Default"		!"xset m default"
	"Bug Compat On"		!"xset bc"
	"Bug Compat Off"	!"xset -bc"
	"ReHash FP"		!"xset fp rehash"
	"Reset FP Default"	!"xset fp default"
 ifelse(COLOR, Yes,
	["Colour Map Ctl..."	f.menu "cmap"], [])
	"Screen Saver..."	f.menu "screensaver"
	"Keyboard LEDs..."	f.menu "leds"
	""			f.separator
	"Pin this menu"		f.pin
}

ifelse(COLOR, Yes,
[menu "cmap"
{
	"Colour Map Control"	f.title
	"View Default Map"	!"xcmap &"
	""			f.separator
	"Set All"		!"xstdcmap -all -verbose &"
	"Set Best"		!"xstdcmap -best -verbose &"
	"Set Default"		!"xstdcmap -default -verbose &"
	"Set Grey"		!"xstdcmap -gray -verbose &"
	"Set Red"		!"xstdcmap -red -verbose &"
	"Set Green"		!"xstdcmap -green -verbose &"
	"Set Blue"		!"xstdcmap -blue -verbose &"
	""			f.separator
	"Delete default"	!"xstdcmap -delete default -verbose &"
	"Delete best"		!"xstdcmap -delete best -verbose &"
	"Delete grey"		!"xstdcmap -delete gray -verbose &"
	"Delete red"		!"xstdcmap -delete red -verbose &"
	"Delete green"		!"xstdcmap -delete green -verbose &"
	"Delete blue"		!"xstdcmap -delete blue -verbose &"
	""			f.separator
	"Pin this menu"		f.pin
}
], [])

menu "screensaver"
{
	"Screen Saver Features"	f.title
	"Set Timer..."		f.menu "screensavertime"
	"Enable"		!"xset s on"
	"Disable"		!"xset s off"
	"Use Video Blanking"	!"xset s blank"
	"Use Background Pattern" !"xset s noblank"
	""			f.separator
	"Set Defaults"		!"xset s default"
}

menu "screensavertime"
{
	"Enable Screen Saver after:"	f.title
	"5  sec"			!"xset s 5"
	"30 sec"			!"xset s 30"
	"1  min"			!"xset s 60"
	"5  min"			!"xset s 300"
	"10 min"			!"xset s 600"
	"15 min"			!"xset s 900"
}

menu "leds"
{
	"Keyboard LED Control"	f.title
	"all on"		!"xset led on"
	"all off"		!"xset led off"
	"1 on"			!"xset led 1"
	"1 off"			!"xset -led 1"
	"2 on"			!"xset led 2"
	"2 off"			!"xset -led 2"
	"3 on"			!"xset led 3"
	"3 off"			!"xset -led 3"
	"4 on"			!"xset led 4"
	"4 off"			!"xset -led 4"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "exit"
{
	"Exit CTWM"				f.title
	"        Confirm...."			f.quit
}

menu "applications"
{
	"Applications"			f.title
	"Xauth to..."			f.menu "xauths"
	""				f.separator
 ifdef([ON_OSX], [
	"Mac OS X Apps..."		f.menu "osx-apps"
	""				f.separator
 ])
	""				f.separator
	"Xterm's Everywhere..."		f.menu "xterms"
	"Emacs Everywhere..."		f.menu "emacs"
	""				f.separator
	"Console Server"		f.menu "consoles"
	""				f.separator
	"Monitors..."			f.menu "monitors"
	"Locks..."			f.menu "locks"
	"Backgrounds..."		f.menu "backgrounds"
	"Audio Tools..."		f.menu "audios"
	"Graphics Tools..."		f.menu "graphics"
	"Other Tools..."		f.menu "tools"
	"Miscellaneous..."		f.menu "miscapps"
	"Games..."			f.menu "games"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "audios"
{
	"Audio Tools"			f.title
	"xmms"				!"xmms -m &"
	""				f.separator
	"audemo"			!"cd HOME/lib/sounds; audemo &"
	"auedit"			!"auedit &"
	"aupanel"			!"aupanel &"
	"auphone"			!"auphone &"
	"auwave"			!"auwave &"
	""				f.separator
	"xcdplayer"			!"xcdplayer &"
	"xmcd"				!"xmcd &"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "graphics"
{
	"Graphics Applications"		f.title
	"xart"				!"xart &"
	"xpaint"			!"xpaint &"
	"xfig"				!"xfig &"
	"tgif"				!"tgif &"
	"xbmbrowser"			!"xbmbrowser &"
	"gimp"				!"gimp &"
	"xcol"				!"xcol &"
	"xcolor"			!"xcolor &"
	"xcolsel"			!"xcolsel &"
	"xvgr"				!"xvgr &"
	"xpdf"				!"xpdf &"
	"xmag"				!"xmag &"
	"xditview"			!"xditview &"
	"xcmap"				!"xcmap &"
	"xwd > ~/tmp/win.xwd"		!"xwd > HOME/tmp/win.xwd"
	"xwd -root > ~/tmp/root.xwd"	!"xwd -root > HOME/tmp/root.xwd"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "tools"
{
	"Miscellaneous Tools"		f.title
	"xclipboard"			!"xclipboard &"
	"xcutsel"			!"xcutsel &"
	"xfontsel"			!"xfontsel &"
	"xkeycaps"			!"xkeycaps &"
	"xdpr"				!"xdpr -device ps &"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "miscapps"
{
	"Miscellaneous Applications"	f.title
	"xalarm"			!"xalarm &"
 ifelse(eval(FontYDPI > 110), 1, [
# 800 is barely wide enough for the widest button (trunc), and 500 is also a
# little short for the buttons, except making it taller obscures too much of the
# "degree" indicators
	"xcalc"				!"xcalc -stipple -geometry 800x550 &"
 ], [
	"xcalc"				!"xcalc -stipple &"
 ])
	"xcalendar"			!"xcalendar &"
	"xedit"				!"xedit &"
	"xfd"				!"xfd &"
	"xftp"				!"xftp &"
	"xmail"				!"xmail &"
	"xman"				!"xman &"
	"xmh"				!"xmh &"
	"xpostit"			!"xpostit &"
	"xplan"				!"xplan &"
	"xrolodex"			!"xrolodex &"
	"xtalk"				!"xtalk &"
	"xhelp"				!"xhelp &"
	"xrn"				!"xrn &"
	"xshell"			!"xshell &"
	"xvnews"			!"xvnews &"
	"xvtdl"				!"xvtdl &"
	"axe"				!"axe &"
	"plan"				!"plan &"
	"pan"				!"pan &"
	"timekeeper"			!"timekeeper &"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "emacs"
{
	"Emacsen"		f.title
				# XXX should this start a shell that sources .profile first?
	"@CLIENTHOST"		!"${MY_EMACS} -fh &"
 ifdef([USE_X11SERVER], [
	"@X11SERVER"		!". ./.shrc; onx11server -n ${X11SERVER} \"${MY_EMACS} -fh\" &"
 ])
 ifdef([AT_LOCAL], [
	"@more"			!". ./.shrc; onx11server -n more.local \"emacs -fh\" &"
	"@xenful"		!". ./.shrc; onx11server -n xenful.local \"emacs -fh\" &"
	"@xentastic"		!". ./.shrc; onx11server -n xentastic.local \"emacs -fh\" &"
])
	""			f.separator
	"Pin this menu"		f.pin
}

menu "monitors"
{
	"Monitors"		f.title
	"xconsole"		!"xconsole -geometry 500x120-0-0 -notify -verbose &"
	"xconsole x-errors"	!"xconsole -geometry 500x120-0-0 -notify -verbose -file HOME/.xsession-errors &"
	"xconsole x-errors-DISPLAY" !"xconsole -geometry 500x120-0-0 -notify -verbose -file HOME/.xsession-errors-`echo ${DISPLAY} | sed 's/\.[[0-9]]*$//'` &"
	""			f.separator
	"xclock"		!"xclock -geometry ${ClockGeom} &"
	"xclock -digital"	!"xclock -geometry ${DClockGeom} -digital &"
	"swissclock"		!"swisswatch -name swissclock -geometry ${ClockGeom} &"
	"xchrono"		!"xchrono -local Toronto -tokyo &"
	"asclock"		!"asclock -shape -position -200+234 &"
	""			f.separator
	"xbiff"			!"xbiff -rv -bw 0 &"
	"xlbiff"		!"xlbiff &"
	"xbuffy"		!"xbuffy -geometry 80x25-0+235 -shortnames -header 0 &"
	"xbuffy w/-acmd"	!"xbuffy -geometry 80x25-0+235 -shortnames -header 0 -acmd \"${AUDIOPLAYER} HOME/lib/sounds/newmail &\" &"

	""			f.separator
	"xload"			!"xload -geometry ${XloadGeom} -hl XLOAD_HL &"
 ifdef([USE_X11SERVER], [
	"xload @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"xload -display ${REMOTE_DISPLAY} -geometry 120x40-200+48 -hl XLOAD_HL\" &"
 ])
 ifdef([AT_VERY_LOCAL], [
	"air-traffic-monitor"	!"uxterm OPT_UXTERM_FA -tn xterm-256color -geometry 80x25+eval((WIDTH / 2) - ( 3 * HorizDPI))-eval(VertDPI * 2) -fs 9 -fa \"${DefaultXftFontSpec}\" ${XTERM_OPTS} -fc 5 -n AirTrafficMonitor -T AirTrafficMonitor -e air-traffic-monitor &"
 ])
 ifdef([AT_LOCAL], [
#	"xload @building"	!". ./.shrc; onx11server -n building.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomBuilding} -hl red\" &"
	"xload @more"		!". ./.shrc; onx11server -n more.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomMore} -hl red\" &"
	"xload @central"	!"ssh -CY -n woods@central.avoncote.ca \". ./.profile; exec xload -geometry ${XloadGeomCentral} -hl red\" &"
#	"xload @future"		!". ./.shrc; onx11server -n future.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomFuture} -hl red\" &"
	"xload @xenful"		!". ./.shrc; onx11server -n xenful.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomXenful} -hl red\" &"
	"xload @xentastic"	!". ./.shrc; onx11server -n xentastic.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomXentastic} -hl red\" &"
	"xload @xentral"	!"ssh -CY -n woods@xentral.avoncote.ca \". ./.profile; exec xload -geometry ${XloadGeomXentral} -hl red\" &"
	"xload @once"		!". ./.shrc; onx11server -n once.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomOnce} -hl red\" &"
	#
#	"xload @historically"	!". ./.shrc; onx11server -n historically.local \"xload -display ${REMOTE_DISPLAY} -geometry ${XloadGeomHistorically} -hl red\" &"
	"xload @b2"		!"ssh -CY -n woods@b2.avoncote.ca \". ./.profile; exec xload -geometry ${XloadGeomB2} -hl red\" &"
	"xload @fezzik"		!". ./.shrc; onx11server -nS fezzik.local \"xload -geometry ${XloadGeomFezzik} -hl red\" &"
	"xload @nbtest"		!". ./.shrc; onx11server -n nbtest.local \"xload -geometry ${XloadGeomNbtest} -hl red\" &"
	"xload @nbtcur"		!". ./.shrc; onx11server -n nbtcur.local \"xload -geometry ${XloadGeomNbtcur} -hl red\" &"
	"xload @nb10"		!". ./.shrc; onx11server -n nb10.local \"xload -geometry ${XloadGeomNb10} -hl red\" &"
	"xload @nbday"		!". ./.shrc; onx11server -nS nbday.local \"xload -geometry ${XloadGeomNbday} -hl red\" &"
 ])
 ifdef([USE_X11SERVER], [
	"xosview @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"xosview -display ${REMOTE_DISPLAY}\" &"
 ])
 ifdef([USE_X11SERVER], [
	"xcpustate @X11SERVER"	!". ./.shrc; onx11server -n ${X11SERVER} \"xcpustate -display ${REMOTE_DISPLAY} -geometry 190x20-0+300 -shorten 1 -wait -cpu -disk\" &"
 ])
	"tkined"		!"tkined &"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "locks"
{
	"Locks"			f.title
	"xlock"			!"xlock -mode flame &"
	"xlock remote"		!"xlock -remote -mode flame &"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "backgrounds"
{
	"Backgrounds"		f.title
	"xearth"		!"xearth -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth nogrid"		!"xearth -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -wait 900 -nice 10 &"
	"xearth orbiting"	!"xearth -bigstars 10 -pos orbit,0.1,0 -rot 10 -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth orbiting fast"	!"xearth -bigstars 10 -pos orbit,0.1,0 -rot 5 -label -labelpos +1+1 -grid -wait 0 &"
 ifelse(COLOR, Yes, [
	"xearth -gamma 1.7"	!"xearth -gamma 1.7 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth -gamma 1.7 nogrid" !"xearth -gamma 1.7 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -wait 900 -nice 10 &"
	"xearth -gamma 1.7 orbiting" !"xearth -gamma 1.7 -bigstars 10 -pos orbit,0.1,0 -rot 10 -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth -gamma 1.7 orbiting fast" !"xearth -gamma 1.7 -bigstars 10 -pos orbit,0.1,0 -rot 5 -label -labelpos +1+1 -grid -wait 0 &"
	"xearth on greyscale"	!"xearth -gamma 1.6 -night 15 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
 ], [
	"xearth on mono"	!"xearth -mono -night 15 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
 ])
	"xplanet"		!"xplanet  -label -labelpos +15-15 -radius 60 -latitude ${LATITUDE:-0} -longitude ${LONGITUDE:-0} -wait 300 &"
	"xphoon"		!"xphoon -t 10 &"
	"xsetroot eschernknot"	!"xsetroot -bitmap ${X11PATH}/[include]/X11/bitmaps/escherknot"
	"xsetroot xsnow"	!"xsetroot -bitmap ${X11PATH}/[include]/X11/bitmaps/xsnow"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "games"
{
	"X11 Games"		f.title
	"Abuse"			!"abuse &"
	"battleball"		!"battleball ${DISPLAY} &"
	"GalaXa"		!"galaxa &"
	"nighthawk"		!"nighthawk &"
	"Spider"		!"spider &"
	"xbat"			!"xbat &"
	"xbill"			!"xbill &"
	"xbomb"			!"xbomb &"
	"xbomber"		!"xbomber &"
	"xdemineur"		!"xdemineur &"
	"xevil"			!"xevil &"
	"xfreecell"		!"xfreecell &"
	"xgalaga"		!"xgalaga &"
	"xjig"			!"xjig &"
	"xkobo"			!"xkobo &"
 ifelse(eval(FontYDPI > 110), 1, [
	"xmahjongg"		!"xmahjongg -t real_x2 -g 2000x1500 --bg HOME/public_html/marble.gif &"
 ], [
	"xmahjongg"		!"xmahjongg &"
 ])
	"xmris"			!"xmris &"
	"xpat2"			!"xpat2 &"
	"xpilot"		!"xpilot &"
	"xpipeman"		!"xpipeman &"
	"xscrabble"		!"xscrabble &"
	"xsoldier"		!"xsoldier &"
	"xskat"			!"xskat &"
	"xworm"			!"xworm &"
	""			f.separator
	"X11 Sample Toys..."	f.menu "samplegames"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "samplegames"
{
	"X11 Sample Toys"	f.title
	"Xeyes"			!"xeyes &"
	"Xgc"			!"xgc &"
	"Xgas"			!"xgas &"
	"Xlogo"			!"xlogo &"
	"ico"			!"ico &"
	"maze"			!"maze &"
	"puzzle"		!"puzzle &"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "xterms"
{
	"Xterms Everywhere"	f.title
	"Xterm @CLIENTHOST"	!"${X11BIN}/xterm OPT_XTERM_FA OPT_XTERM_TN ${XTERM_OPTS} OPT_XTERM_LOGIN &"
	"UXterm @CLIENTHOST"	!"${X11BIN}/uxterm OPT_UXTERM_FA OPT_XTERM_TN ${XTERM_OPTS} OPT_XTERM_LOGIN &"
 ifdef([AT_LOCAL], [
# xxx this should use a macro!
	"UXterm @xenful"	!". ./.shrc; onx11server -n xenful.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @xenful"	!". ./.shrc; onx11server -n xenful.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @xentastic"	!". ./.shrc; onx11server -n xentastic.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @xentastic"	!". ./.shrc; onx11server -n xentastic.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	#
#	"UXterm @building"	!". ./.shrc; onx11server -n building.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
#	"UXterm-big @building"	!". ./.shrc; onx11server -n building.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @more"		!". ./.shrc; onx11server -n more.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @more"	!". ./.shrc; onx11server -n more.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
#	"UXterm @future"	!". ./.shrc; onx11server -n future.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
#	"UXterm-big @future"	!". ./.shrc; onx11server -n future.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
#	"UXterm @isit"		!". ./.shrc; onx11server -n isit.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
#	"UXterm-big @isit"	!". ./.shrc; onx11server -n isit.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
#	"UXterm @lilbit"	!". ./.shrc; onx11server -n lilbit.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
#	"UXterm-big @lilbit"	!". ./.shrc; onx11server -n lilbit.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
#	"UXterm @rpi"		!". ./.shrc; onx11server -n rpi.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
#	"UXterm-big @rpi"	!". ./.shrc; onx11server -n rpi.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
#	"UXterm @historically"	!". ./.shrc; onx11server -n historically.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
#	"UXterm-big @historically" !". ./.shrc; onx11server -n historically.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @once"		!". ./.shrc; onx11server -n once.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @once"	!". ./.shrc; onx11server -n once.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @fezzik"	!". ./.shrc; onx11server -nS fezzik.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @fezzik"	!". ./.shrc; onx11server -nS fezzik.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @nb10"		!". ./.shrc; onx11server -n nb10.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @nb10"	!". ./.shrc; onx11server -n nb10.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @nbday"		!". ./.shrc; onx11server -nS nbday.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @nbday"	!". ./.shrc; onx11server -nS nbday.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @nbt"		!". ./.shrc; onx11server -n nbt.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @nbt"	!". ./.shrc; onx11server -n nbt.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @nbt2"		!". ./.shrc; onx11server -n nbt2.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @nbt2"	!". ./.shrc; onx11server -n nbt2.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @nbtest"	!". ./.shrc; onx11server -n nbtest.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @nbtest"	!". ./.shrc; onx11server -n nbtest.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @nbtcur"	!". ./.shrc; onx11server -n nbtcur.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @nbtcur"	!". ./.shrc; onx11server -n nbtcur.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	"UXterm @very-old"	!". ./.shrc; onx11server -nS very-old.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS}\" &"
	"UXterm-big @very-old"	!". ./.shrc; onx11server -nS very-old.local \"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_BIG_XTERM ${XTERM_OPTS}\" &"
	#
	# xxx these are not so useful as if the SSH connection drops then the
	# window simply disappears with no hint as to when or why!  See further
	# discussion in ~/.xinitrc regarding running X11 via tunnels, etc.
	#
	"Slogin @xentral"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS} -e 'slogin -C xentral.avoncote.ca' &"
	"Slogin @central"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS} -e 'slogin -C central.weird.com' &"
	"Slogin @b2"		!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS} -e 'slogin -C b2.avoncote.ca' &"
  ifdef([AT_VERY_LOCAL], [], [
	"Xterm @very"		!". ./.shrc; onx11server -n very.local \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
	"Slogin @very"		!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM ${XTERM_OPTS} -e 'slogin -C very.local' &"
  ])
 ])
 ifdef([AT_WEIRD], [
  ifelse(HOSTNAME, most.weird.com, [], [
	"Xterm @most"		!". ./.shrc; onx11server -n most.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, historically.weird.com, [], [
	"Xterm @historically"	!". ./.shrc; onx11server -n historically.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, building.weird.com, [], [
	"Xterm @building" 	!". ./.shrc; onx11server -n building.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, once.weird.com, [], [
	"Xterm @once"		!". ./.shrc; onx11server -n once.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, very.weird.com, [], [
	"Xterm @very"		!". ./.shrc; onx11server -n very.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, almost.weird.com, [], [
	"Xterm @almost"		!". ./.shrc; onx11server -n almost.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, whats.weird.com, [], [
	"Xterm @whats"		!". ./.shrc; onx11server -n whats.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, sometimes.weird.com, [], [
	"Xterm @sometimes" 	!". ./.shrc; onx11server -n sometimes.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, always.weird.com, [], [
	"Xterm @always" 	!". ./.shrc; onx11server -n always.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
  ifelse(HOSTNAME, freely.weird.com, [], [
	"Xterm @freely" 	!". ./.shrc; onx11server -n freely.weird.com \"xterm OPT_XTERM_FA OPT_XTERM_TN -display ${REMOTE_DISPLAY} ${XTERM_OPTS}\" &"
  ])
 ])
	""			f.separator
	"Pin this menu"		f.pin
}

# for pushing our X11 AUTH cookies over to the various target hosts in case they
# don't share $HOME with the local host...
#
#	xauth nextract - ${REMOTE_DISPLAY} | rsh $X11SERVER $X11BIN/xauth nmerge -
#
ifdef([AT_WEIRD], [
menu "xauths"
{
	"Xauth pushes to Weird.com"	f.title
 ifdef([USE_X11SERVER], [
	"Xauth to X11SERVER"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server ${X11SERVER} 'xauth nmerge -' ) &"
 ])
	"Xauth to most"		!"xauth nextract - ${REMOTE_DISPLAY} | ${RSH} most.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to isit"		!"xauth nextract - ${REMOTE_DISPLAY} | ${RSH} isit.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to once"		!"xauth nextract - ${REMOTE_DISPLAY} | ${RSH} once.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to historically"	!"xauth nextract - ${REMOTE_DISPLAY} | ${RSH} historically.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to freely"	!"xauth nextract - ${REMOTE_DISPLAY} | ${RSH} freely.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to whats"	!"xauth nextract - ${REMOTE_DISPLAY} | ${RSH} whats.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	""			f.separator
	"Pin this menu"		f.pin
}
])

ifdef([AT_LOCAL], [
menu "xauths"
{
	"Xauth pushes"		f.title
	"Xauth to more"		!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server more.local 'xauth nmerge -' ) &"
	"Xauth to xenful"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server xenful.local 'xauth nmerge -' ) &"
	"Xauth to xentastic"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server xentastic.local 'xauth nmerge -' ) &"
	"Xauth to nb10"		!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server nb10.local 'xauth nmerge -' ) &"
	"Xauth to nbday"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server -S nbday.local 'xauth nmerge -' ) &"
	"Xauth to nbt"		!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server nbt.local 'xauth nmerge -' ) &"
	"Xauth to nbt2"		!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server nbt2.local 'xauth nmerge -' ) &"
	"Xauth to nbtest"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server nbtest.local 'xauth nmerge -' ) &"
	"Xauth to nbtcur"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server nbtcur.local 'xauth nmerge -' ) &"
	"Xauth to fezzik"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server -S fezzik.local 'xauth nmerge -' ) &"
	"Xauth to frodo"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server -S frodo.local 'xauth nmerge -' ) &"
#	"Xauth to historically"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server historically.local 'xauth nmerge -' ) &"
	"Xauth to once"		!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server once.local 'xauth nmerge -' ) &"
	"Xauth to very-old"	!"xauth nextract - ${REMOTE_DISPLAY} | (. ./.shrc; onx11server -S very-old.local 'xauth nmerge -' ) &"
	""			f.separator
	"Pin this menu"		f.pin
}
])

ifdef([ON_OSX], [
menu "osx-apps"
{
	"Mac OS X Applications"	f.title
	"pasteboard copy"	!"uxterm OPT_UXTERM_FA OPT_XTERM_TN OPT_LITTLE_XTERM -T 'Paste text to PasteBoard here, end with EOF' -e pbcopy"
	""			f.separator
	"Activity Monitor"	!"open '/Applications/Utilities/Activity Monitor.app' &"
	"Console"		!"open /Applications/Utilities/Console.app &"
	"Vivaldi"		!"open '/Applications/Vivaldi.app' &"
	"Safari"		!"open '/Applications/Safari.app' &"
	"Google Chrome"		!"open '/Applications/Google Chrome.app' &"
	"Calendar"		!"open /Applications/Calendar.app &"
	"Photos"		!"open /Applications/Photos.app &"
	"Podcasts"		!"open /Applications/Podcasts.app &"
	"Music"			!"open /Applications/Music.app &"
	"Mail"			!"open /Applications/Mail.app &"
	"Preview"		!"open /Applications/Preview.app &"
	"Signal"		!"open /Applications/Signal.app &"
	"System Preferences"	!"open '/Applications/Utilities/System Preferences.app' &"
	"System Profiler"	!"open '/Applications/Utilities/System Profiler.app' &"
	"Terminal"		!"open /Applications/Utilities/Terminal.app &"
	""			f.separator
	"Pin this menu"		f.pin
}
])

# Local Variables:
# comment-start: "# "
# conf-space-keywords: "\\(ifdef\\|ifelse\\|define\\|changequote\\|eval\\)"
# End:
