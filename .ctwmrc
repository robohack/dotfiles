# -*-conf-*-
#
# conf mode works best with conf-space-mode, but that font-locks the
# M4 statements weirdly.  Defining conf-space-keywords helps a bit.
#
# m4 mode is also helpful, but it doesn't properly honour matching of
# curly braces, nor strings
#
#	.ctwmrc - local startup for ctwm
#
#ident	"@(#)HOME:.ctwmrc	36.5	19/12/04 18:26:06 (woods)"
#
# Things that affect the operation of various menus, etc.:
#
# Private xbm icon collection goes in HOME/lib/bitmaps
# Private xpm icon collection goes in HOME/lib/pixmaps
# Sounds to play go in HOME/lib/sounds (eg "newmail").
#
# Environment variables used (set by .profile et al):
#
# RSH		- path to local rsh(1), or maybe ssh(1)
# SSH		- path to local ssh(1)
# X11BIN	- localized path for /usr/X11/bin or /usr/bin/X11, etc.
# X11PATH	- localized path for /usr/X11 or /usr/X11R6, etc.
# X11SERVER	- name of a possibly more powerful local server for X applications
# DISPLAY	- of course
# REMOTE_DISPLAY - suitable for local network access, with xauth sent
# PATH		- sometimes included in one passed to remote hosts
# AUDIOPLAYER	- program to invoke to play a sound file (eg. "auplay")
#
# The current directory is always expected to be $HOME.
#
# ./.profile should provide proper path setup
#
# ./.shrc should provide a function "onx11server"

changequote([, ])

ifelse(eval(index(HOSTNAME, weird.com) >= 0), 1, [define(AT_WEIRD, [@weird.com])], [])
ifelse(eval(index(HOSTNAME, robohack.planix.com) >= 0), 1, [define(AT_WEIRD, [@robohack.planix.com])], [])

ifelse(eval(index(HOSTNAME, very.local) >= 0), 1, [define(AT_VERY_WEIRD, [@very.local])], [])

ifdef([AT_VERY_WEIRD], [define(ON_OSX, [yes])])

ifelse([SERVERHOST], [CLIENTHOST], [define(USE_X11SERVER, [yes])], [])

# This will be used for "local" xterms.
#
# There should be a better way to try things at M4 runtime... perhaps
# we should use an environment variable instead.
#
# (N.B.:  This is kept as an example of (poor) handling of command
# options we want but which may not be universally available.)
#
ifelse(HOSTNAME, anciently.weird.com, [define(OPT_ZICONBEEP, [])],
 [define(OPT_ZICONBEEP, [-ziconbeep 1])]
)

# Boolean flags
#
# keep these sorted as if the 'No' was stripped
#
AutoFocusToTransients	# there are some good things, and some VERY bad things, about this...
#AutoOccupy		# Definitely not a good idea....
AutoRelativeResize
AutoRaiseIcons
ifelse(eval(PLANES <= 8), 1, [BeNiceToColormap], [])
BorderResizeCursors
CenterFeedbackWindow
ClientBorderWidth
DecorateTransients
DontMoveOff		# unfortunately also forces clients to resize
DontPaintRootWindow
#NoCaseSensitive	# only affects iconmanager?
NoGrabServer
NoMenuShadows
NoRaiseOnMove
NoRaiseOnResize
NoShowOccupyAll
PackNewWindows
RestartPreviousState	# only useful when restarting the WM (saves to X11 server memory)
ReallyMoveInWorkspaceManager
#ReverseCurrentWorkspace
SaveWorkspaceFocus	# new in 3.8.1
ShowWorkSpaceManager
SchrinkIconTitles	# a spello?
ShortAllWindowsMenus
SortIconManager
#StayUpMenus
StartInMapState
SunkFocusWindowTitle
#TransientHasOccupation # DNE: make sure transients stay with their leader!
UseThreeDBorders
#UseThreeDIconBorders	# XXX apparently it never did anything anyway
UseThreeDIconManagers
UseThreeDMenus
UseThreeDTitles
ifelse(eval(PLANES > 8), 1, [UseThreeDWMap], [])	# this is way too wasteful of colours....

# variables with simple values
#
BorderShadowDepth		2	# should allow more on >8-bit displays
BorderWidth			2	# has no effect when UseThreeDBorders is on
ConstrainedMoveTime		600	# 400 seems a tad too quick for a double-click
FramePadding			0
IconBorderWidth			3
IconManagerShadowDepth		3
MaxIconTitleWidth		500
MaxWindowSize			"WIDTH[x]HEIGHT"	# not everyone plays fair..., default is "30000x30000"
MoveDelta			4
MoveOffResistance		50
MovePackResistance		50
OpaqueMoveThreshold		100	# window % of screen size
OpaqueResizeThreshold		100	# window % of screen size
OpenWindowTimeout		15
RandomPlacement			"on"	# I'm tired of dragging so many windows around!
ThreeDBorderWidth		6	# has no effect unless UseThreeDBorders is on
TitleButtonShadowDepth		3
TitleShadowDepth		3
UsePPosition			"non-zero"
WMgrButtonShadowDepth		3
XMoveGrid			1
YMoveGrid			1
Zoom				12

# resolutions are in pixels per metre, for some stupid reason....
#
ifelse(eval(X_RESOLUTION >= 3000 && Y_RESOLUTION >= 3000), 1,
  [define(FT_RES, [100])],
 [define(FT_RES, [75])]
)

TitleFont	"-*-helvetica-bold-r-*-*-*-100-FT_RES-FT_RES-*-*-iso8859-1"
IconFont	"-*-helvetica-bold-r-*-*-*-80-FT_RES-FT_RES-*-*-iso8859-1"
IconManagerFont	"-*-helvetica-medium-r-*-*-*-80-FT_RES-FT_RES-*-*-iso8859-1"
MenuFont	"-*-helvetica-medium-r-*-*-*-80-FT_RES-FT_RES-*-*-iso8859-1"
ResizeFont	"-*-courier-bold-r-*-*-*-240-FT_RES-FT_RES-*-*-iso8859-1"

# Define some useful functions for motion-based actions.
# These must come after fonts....
#
ChangeWorkspaceFunction		!"$AUDIOPLAYER HOME/lib/sounds/wm-wschange &"
IconifyFunction			!"$AUDIOPLAYER HOME/lib/sounds/wm-iconify &"
DeIconifyFunction		!"$AUDIOPLAYER HOME/lib/sounds/wm-deiconify &"
DefaultFunction			!"$AUDIOPLAYER HOME/lib/sounds/wm-default &"
# this is the default...
#WindowFunction			{ f.deiconify f.raise }

Color {
	# highlit window borders
	BorderColor		"SteelBlue"
	# unused?
	BorderTileBackground	"grey70"
	# un-highlit window borders
	BorderTileForeground	"grey50"
	DefaultBackground	"LightSteelBlue"
	DefaultForeground	"blue4"
	IconBackground		"blue4"
	IconForeground		"White"
	IconBorderColor		"gray50"
	IconManagerBackground	"blue4"
	IconManagerForeground	"White"
	IconManagerHighlight	"yellow"
	MapWindowBackground	"LightSteelBlue" {
		# XXX unfortunately the "root*" trick doesn't work very well
		# since these colours are only assigned if the window name, at
		# the moment the window is created, matches; or if Ctwm is
		# restarted, e.g. after one runs "su"...
		"root*" "red"
		"xterm" "SteelBlue"
		"emacs"	"yellow"
		"tkined" "red"
	}
	MapWindowForeground	"Black" {
		"xterm" "White"
		"tkined" "White"
	}
	MenuBackground		"DarkGreen"
	MenuForeground		"White"
	MenuTitleBackground	"DarkSeaGreen"
	MenuTitleForeground	"White"
	MenuShadowColor		"gray50"
	TitleBackground		"blue"
	TitleForeground		"White"
}

Monochrome {
	BorderColor		"grey70"
	BorderTileBackground	"grey6"
	BorderTileForeground	"grey50"
	DefaultBackground	"Black"
	DefaultForeground	"White"
	IconBorderColor		"grey3"
	MapWindowBackground	"White"
	MapWindowForeground	"Black"
	MenuBackground		"Black"
	MenuForeground		"White"
	MenuTitleBackground	"grey98"
	MenuTitleForeground	"Black"
	MenuShadowColor		"gray50"
	TitleBackground		"blue"
	TitleForeground		"White"
}

ifelse(COLOR, Yes, [

define(OPT_XTERM_TN, [-tn xterm-256color])
define(XLOAD_HL, [red])

MapWindowCurrentWorkSpace {
	"yellow"
	"grey50"
	"grey98"
}
MapWindowDefaultWorkSpace {
	"DarkGreen"
	"grey98"
	"grey50"
}

# Colours to be stored in the root window's _MIT_PRIORITY_COLORS
# property.  Clients _may_ elect to preserve these values when
# installing their own colormap.  Saving colours used in window
# manager features, such as borders, titles, and menus, could help
# avoid annoying colour-map flashing just because the cursor strays
# out, or when using the window menu.
#
# XXX Hopefully it's not a waste when the same colour is listed
# multiple times in this list!
#
# could only do this if PLANES <= 8
#
#SaveColor {
#	BorderColor
#	BorderTileBackground
#	BorderTileForeground
#	DefaultBackground
#	DefaultForeground
#	MenuBackground
#	MenuForeground
#	MenuTitleBackground
#	MenuTitleForeground
#	MenuShadowColor
#	TitleBackground
#	TitleForeground
#}

# else not COLOR
], [

define(XLOAD_HL, [grey90])
define(OPT_XTERM_TN, [])

MapWindowCurrentWorkSpace {
	"White"
	"grey50"
	"grey98"
}
MapWindowDefaultWorkSpace {
	"Black"
	"grey98"
	"grey50"
}

# end not COLOR
])

# put the icon to the right-edge of its title -- this seems to work
# best for icon titles which expand when hovered over, and when the
# IconRegion gravity is to the East
#
IconJustification		"right"

IconRegionAlignement		"border"
IconRegionJustification		"border"

# Note it seems the IconRegion must include the expanded icon title,
# which can be a bit long when we have pathnames in xterm titles.
#
# This isn't such a problem though if the "gravity" is North East and
# when the IconJustification is to the right -- the IconRegion can
# then be expanded to the left over other windows and normally, so
# long as there aren't too many icons to fit in the actual desired
# area, then expanding titles will have the needed room to expand to
# the left.
#
# A 10-pixel X 10-pixel grid keeps icons packed about as tight as
# you'd ever want them to be.  This is of course way too small a grid
# to keep arbitrary sized icons centred in a box.  It also means
# little icons can mess up the arrangement of normal-sized icons.  Too
# bad we can't force them on the grid such that they overlap if
# they're too big.  Alternately if the arrangement was always shuffled
# on every change such that all similar sized icons were kept
# together....  And how about shrinking them to always fit and using a
# magnifier like the Aqua dock?
#
# On the big screen we keep a little xterm open above xconsole in the
# bottom right so we keep the icon region above that.  On the
# mid-sized screens we keep icons just above the xconsole (even though
# it's rarely kept open).
#
# (use "xlogo -geometry fooxbar" to see where this will be!)
#
# N.B.:  We could increase the height of the region for large screens
# to 380 _and_ get a 50x80 xterm under it if all systems had Apple's
# nice "fixed" TrueType font.  Note it has to be on the XTerm system.
#
ifelse(eval(WIDTH >= 1600 && HEIGHT >= 1200), 1, [IconRegion	"1000x350-0+296" North East 10 10],
 [ifelse(eval(WIDTH >= 1280 && HEIGHT >= 1024), 1, [IconRegion	"800x580-0+310" North East 10 10],
  [IconRegion	"500x250-0+300" North East 10 10]
 )]
)

# for Xterms we use two different macros to set the geometry of small
# and large windows.  These macros are set based on the estimated size
# of the screen.
#
#	5x8 == Tiny
#	7x14 == Small
#	8x13 == Medium
#	9x15 == Large
#
ifelse(eval(WIDTH >= 2560 && HEIGHT >= 1440), 1, [define(OPT_BIG_XTERM, [-geometry 132x+100+0 -font 7x14])],
 [ifelse(eval(WIDTH >= 1600 && HEIGHT >= 1280), 1, [define(OPT_BIG_XTERM, [-geometry 117x83+0+0 -font 9x15])],
  [ifelse(eval(WIDTH >= 1600 && HEIGHT >= 1200), 1, [define(OPT_BIG_XTERM, [-geometry 117x77+0+0 -font 9x15])],
   [ifelse(eval(WIDTH >= 1280 && HEIGHT >= 1024), 1, [define(OPT_BIG_XTERM, [-geometry 100x50+0+0 -font 9x15])],
    [define(OPT_BIG_XTERM, [-geometry 80x40+0+0])]
   )]
  )]
 )]
)
# note the -155 is the height of the normal xconsole window, at 120, plus its decorations (I think)
define(OPT_LITTLE_XTERM, [-geometry 80x45-0-155])
#
# Notes:
#
# - setting -fs (faceSize) to 7.0 makes the TrueType font size most
#   closely match the size of the default "fixed" bitmap font's size.
#   (this may need to be another option in the way of OPT_ZICONBEEP if
#   we encounter any systems providing xterms without it)
#
define(OPT_LOGIN_XTERM, [-fs 7.5 -cn -rw -sb -si -sk -sl 2048 -ls])

# Can only be one directory!  Uses resource bitmapFilePath first...
#
IconDirectory	"HOME/lib/bitmaps"

ifdef([XPM], [
PixmapDirectory	"HOME/lib/pixmaps:HOME/lib/icons:/usr/lib/X11/twm/images:/usr/X11/lib/X11/twm/images:/usr/X11R6/lib/X11/twm/images:/usr/pkg/lib/X11/twm/images:/sw/etc/X11/ctwm/images:/usr/local/lib/X11/twm/images:"
])

IconManagerDontShow {
	"asclock"
	"lmclock"
	"oclock"
	"swisswatch"
	"swissclock"
	"WorkSpaceManager"
	"xbiff"
	"XBuffy"
	"xclock"
	"xcpustate"
	"xeyes"
	"xload"
	"xlogo"
	"xnetload"
	"xosview"
	"XSysStats"
}

ifdef([XPM], [UnknownIcon "xpm:unknown1.xpm"], [UnknownIcon "unknown.xbm"])

Icons {
	"Untitled"	"Excl"
	"xcmap"		"plaid"
	"XConsole"	"terminal"
  ifdef([XPM], [
	"auedit"	"xpm:audio_editor.xpm"
	"Control"	"xpm:mixer.xpm"
	"emacs"		"xpm:emacs.xpm"	# only when no '-i' given
	"ghostview"	"xpm:ghostview.xpm"
	"log0"		"xpm:document-simple.xpm"
	"log1"		"xpm:document-simple.xpm"
	"log2"		"xpm:document-simple.xpm"
	"Mosaic"	"xpm:xmosaic.xpm"
#	"MPEG Play"	"xpm:movie.xpm"
	"pine"		"xpm:mail1.xpm"
	"spider"	"xpm:spider.xpm"
	"swissclock"	"xpm:xclock.xpm"
#	"xanim"		"xpm:movie.xpm"
	"xcalendar"	"xpm:datebook.xpm"
	"xclipboard"	"xpm:clipboard.xpm"
	"xedit"		"xpm:xedit.xpm"
	"xftp"		"xpm:xftp.xpm"
#	"xfractint"	"xpm:mandelbrot.xpm"
	"Xman"		"xpm:xman.xpm"
	"xpostit"	"xpm:postit.xpm"
	"XSm"		"xpm:xgrab.xpm"
	"xterm"		"xpm:term.xpm"
   ], [
	"emacs"		"gnu.xbm"	# only when no '-i' given
	"pine"		"letters"
	"xterm"		"Term"
	"lmclock"	"clock.xbm"
	"swissclock"	"clock.xbm"
   ])
}

Cursors {
	Frame		"top_left_arrow"
	Title		"top_left_arrow"
	Icon		"top_left_arrow"
	IconMgr		"top_left_arrow"
	Move		"fleur"
	Resize		"fleur"
	Menu		"sb_left_arrow"
	Button		"hand2"
	Wait		"watch"
	Select		"target"
	Destroy		"pirate"
}

# XXX in theory we could/should use TWM_TYPE to protect all the
# WorkSpaces related stuff so that it's only seen if the value is
# "ctwm" -- then we could maybe still use this same file with twm.
# (and/or "vtwm" for use with vtwm, and maybe even "tvtwm" for use
# with tvtwm too, as they each also have a workspace manager, but
# using the pan/view style instead of the separate virtual desktop
# style of ctwm)

# The positioning of the WorkSpace window seems to ignore borders or
# something -- i.e. it's not the same as an ordinary client.  You need
# to specify the horizontal position 10 pixels East of where you'd
# position a client.
#
# Note also that if you manually resize the WorkSpace window the
# geometry shown while doing so bears no relation to the actual
# geometry in pixels, as given here.
#
# The first one is for the likes of "very" where there's room for the xloads.
# The second is for the likes of an modern macbook.
# The third is for the likes of an NCD HMX or 19c with room for a big clock.
# The default is for small screens where there's only room for a small clock.
#
# for the downstairs machine this can move 90 to the left (leaving room for
# a 132-column window at the default font)
#
ifelse(eval(WIDTH >= 1600 && HEIGHT >= 1200), 1, [WorkSpaceManagerGeometry	"170x285-330+0" 2],
 [ifelse(eval(WIDTH >= 1440 && HEIGHT >= 900), 1, [WorkSpaceManagerGeometry	"170x230-330+0" 2],
  [ifelse(eval(WIDTH >= 1280 && HEIGHT >= 1024), 1, [WorkSpaceManagerGeometry	"127x230-192+0" 2],
   [WorkSpaceManagerGeometry	"115x235-112+0" 2]
  )]
 )]
)

ifelse(SERVERHOST, xtremely.weird.com, [
WorkSpaces {
	"Consoles"
	"TkIned"
	"Testing"
	"Browsing"
	"Coding"
	"Work 1"
	"Play"
	"Work 2"
}
], [
WorkSpaces {
	"Consoles"
	"Mail"
	"VMs"
	"Central"
	"Coding"
	"Home"
	"Work 1"
	"Work 2"
}
])

#Occupy {
#    ifelse(SERVERHOST, xtremely.weird.com,
#	[WorkSpace	"TkIned"	{ "tkined" } ])
#	WorkSpace	"Browsing"	{ "Netscape" "mozilla-bin" }
#}

# these match the Window Name (or "Name =" in the identify panel)
#
OccupyAll {
	"asclock"
	"Calculator"
	"NCD User Services:  Console"
	"NCD User Services:  Show Memory"
	"OccupyAll"		# a trick used for starting xterms...
	"lmclock"
	"oclock"
	"swisswatch"
	"swissclock"
	"taglog"
	"WorkSpaceManager"
	"xbiff"
	"xbuffy"		# only the main box window
	"xclock"
	"xconsole"
	"xcpustate"
	"xeyes"
	"xload"
	"xlogo"
	"xmailwatcher"
	"xnetload"
	"xosview"
	"xsm"
	"XSysStats"
	"XMMS"
	"XMMS Equalizer"
	"XMMS Playlist"
	"Dual Spectogram 1.2"
}

NoTitle {
	"asclock"
	"lmclock"
	"oclock"
	"swisswatch"
	"swissclock"
	"WorkSpaceManager"
	"xbiff"
	"xbuffy"		# only the main box window
	"xclock"
	"xcpustate"
	"xeyes"
	"xli"
	"xload"
	"xlogo"
	"xnetload"
	"xosview"
	"XSysStats"
	"xv"
	"xwud"
	"XMMS"
	"XMMS Equalizer"
	"XMMS Playlist"
	"Dual Spectogram 1.2"
}

NoHighlight {
	"swisswatch"
	"swissclock"
	"xeyes"
}

WarpCursor {
	"emacs"		# damn thing gets a resource name based on argv[0]!
	"Links"
	"xterm"
	"xcalc"
	"xmahjongg"
}

# These have an optional window list parameter
#
DontSqueezeTitle
NoTitleHighlight
OpaqueResize
OpaqueMove

Function "forcemove-or-lower"	{ f.forcemove f.deltastop f.lower }
Function "forcemove-or-raise"	{ f.forcemove f.deltastop f.raise }
Function "forcemove-or-iconify"	{ f.forcemove f.deltastop f.iconify }
Function "move-or-lower"	{ f.move f.deltastop f.lower }
Function "move-or-raise"	{ f.move f.deltastop f.raise }
Function "move-or-iconify"	{ f.move f.deltastop f.iconify }
Function "movepack-or-lower"	{ f.movepack f.deltastop f.lower }
Function "movepack-or-raise"	{ f.movepack f.deltastop f.raise }
Function "movepack-or-iconify"	{ f.movepack f.deltastop f.iconify }
Function "resize-or-raise"	{ f.raise f.deltastop f.resize }
Function "resize-or-lower"	{ f.lower f.deltastop f.resize }
#Function "restore-colormap"	{ f.colormap "default" f.lower }

# Set some useful bindings.  Sort of uwm-ish, sort of simple-button-ish
#
Button1 =		: root		: f.menu "quickies"
Button2 =		: root		: f.menu "TwmWindows"
Button3 =		: root		: f.menu "defops"

Button1 = control	: root		: f.menu "TwmAllWindows"
Button2 = control	: root		: f.menu "TwmIcons"
Button3 = control	: root		: f.menu "preferences"

# Note "meta" here means the "option" key on OSX Xquartz
#
Button1 = meta		: root		: f.menu "applications"
Button2 = meta		: root		: f.menu "TwmAllWindows"
Button3 = meta		: root		: f.menu "wmops"

# shift modifier doesn't seem to work (at least not on an NCD HMX)
# the un-alterd buttons get clobbered!
#Button1 = shift	: root		: f.menu "xterm"
#Button2 = shift	: root		: f.menu "TwmIcons"
#Button3 = shift	: root		: f.menu "some-other-menu"

Button1 = control	: icon		: f.menu "winops"
Button2 = control	: icon		: f.iconify
Button3 = control	: icon		: f.raiselower

Button1 = meta		: icon|window	: f.function "forcemove-or-raise"
Button2 = meta		: icon|window	: f.function "forcemove-or-iconify"
Button3 = meta		: icon|window	: f.function "forcemove-or-lower"

Button1 =		: title		: f.function "movepack-or-raise"
Button2 =		: title		: f.raiselower
Button3 =		: title		: f.function "movepack-or-lower"

Button1 =		: frame		: f.function "resize-or-raise"
Button2 =		: frame		: f.raiselower
Button3 =		: frame		: f.function "resize-or-lower"

Button1 = meta		: frame|title	: f.function "forcemove-or-raise"
Button2 = meta		: frame|title	: f.raiselower
Button3 = meta		: frame|title	: f.function "forcemove-or-lower"

Button1 =		: icon		: f.function "move-or-iconify"
Button2 =		: icon		: f.iconify
Button3 =		: icon		: f.lower

Button1 = meta		: icon		: f.function "forcemove-or-iconify"
Button2 = meta		: icon		: f.iconify
Button3 = meta		: icon		: f.lower

Button1 =		: iconmgr	: f.iconify
Button2 =		: iconmgr	: f.raise
Button3 =		: iconmgr	: f.lower

ifdef([ON_OSX], [
# for OS X Mavericks 10.9:  This is a compromise because a plain F3 press (on an
# Apple keyboard), which is the normal Mission Control activator, neither
# invokes Mission Control, nor does it generate an X11 event.  This is also true
# for all of the "media" function buttons.  On an A1243 "big" keyboard I
# normally have F5 set in "System Preferences -> Keyboard -> Short Cuts ->
# Mission Control" as "Application Windows" and F6 set "System Preferences ->
# Keyboard -> Short Cuts -> Launchpad & Dock" as "Show Launchpad".  On smaller
# laptop keyboards all these function keys are media controls, so FN has to be
# used there regardless.
#
"F5" = 			: root		: !"open '/Applications/Mission Control.app' &"
"F6" =			: root		: !"open '/Applications/Launchpad.app' &"
#
# xxx Opening Dock is not exactly what <Command-TAB> does in macOS Quartz but it
# gets you half way there...
#
# XXX this seems to do something similar to invoking Dock, but it seems less
# correct:
# open '/System/Library/CoreServices/Menu Extras/TextInput.menu/Contents/SharedSupport/TISwitcher.app'
#
"Tab" = mod2		: root		: !"open /System/Library/CoreServices/Dock.app &"
# hmmm....  "workspace" is an invalid context for ctwm-3.6
"Tab" = mod2		: workspace	: !"open /System/Library/CoreServices/Dock.app &"
])

"Help"	=		: root		: f.version

"F11"	=		: root		: f.prevworkspace
"F12"	=		: root		: f.nextworkspace

"Left"	= meta		: root		: f.leftworkspace
"Right"	= meta		: root		: f.rightworkspace
"Down"	= meta		: root		: f.downworkspace
"Up"	= meta		: root		: f.upworkspace

"Left"	= mod2		: root		: f.leftworkspace
"Right"	= mod2		: root		: f.rightworkspace
"Down"	= mod2		: root		: f.downworkspace
"Up"	= mod2		: root		: f.upworkspace

# Hmmm... these seem to be delivered to the app regardless....
#"Left"	=		: frame|title	: f.jumpleft "2"
#"Right" =		: frame|title	: f.jumpright "2"
#"Down"	=		: frame|title	: f.jumpdown "2"
#"Up"	=		: frame|title	: f.jumpup "2"
#"Left"	= meta		: frame|title	: f.pack "left"
#"Right" = meta		: frame|title	: f.pack "right"
#"Up"	= meta		: frame|title	: f.pack "top"
#"Down"	= meta		: frame|title	: f.pack "bottom"
#"Left"	= shift|meta	: frame|title	: f.fill "left"
#"Right" = shift|meta	: frame|title	: f.fill "right"
#"Up"	= shift|meta	: frame|title	: f.fill "top"
#"Down"	= shift|meta	: frame|title	: f.fill "bottom"


# icons and menus/operations for window "Title" buttons
#
ifdef([XPM], [
LeftTitleButton ":xpm:menu" = f.menu "winops"
RightTitleButton ":xpm:bar" = f.menu "fills"
RightTitleButton ":xpm:box" = f.menu "zooms"
], [
LeftTitleButton "menu16" = f.menu "winops"
RightTitleButton "weird_size" = f.menu "fills"
RightTitleButton "icon" = f.menu "zooms"
])

#
#	And the menus, with all of the usual things...
#
menu "quickies"
{
	"Short Cuts"		f.title
	"Move & Pack"		f.movepack
	"Move"			f.move
	"Resize"		f.resize
	"Lower"			f.lower
	"Raise"			f.raise
	"Iconify"		f.iconify
	"Identify"		f.identify
	"Occupy ..."		f.occupy
	"Occupy All"		f.occupyall
	"Vanish"		f.vanish
	""			f.separator
	"Toggle workspace"	f.togglestate
	"Screen Refresh"	f.refresh
	"Window Refresh"	f.winrefresh
	"Save"			f.saveyourself
	""			f.separator
	"WinDelete"		f.delete
	"WinDelete or Destroy"	f.deleteordestroy
	"Kill"			f.destroy
 ifdef([AT_WEIRD], [
	""			f.separator
	"Xauth to Weird.com..."	f.menu "xauth-to-weird"
 ])
	""			f.separator
	"emacs [@CLIENTHOST]"	!"emacs -i &"
 ifdef([AT_VERY_WEIRD], [
  ifdef([USE_X11SERVER], [
	"emacs @X11SERVER"	!". ./.shrc; onx11server $X11SERVER 'emacs -i' &"
  ])
	#
	"emacs @future"		!". ./.shrc; onx11server future.local 'emacs -i' &"
	"emacs @building"	!". ./.shrc; onx11server building.local 'emacs -i' &"
	"emacs @more"		!". ./.shrc; onx11server more.local 'emacs -i' &"
	""			f.separator
	"links -g @future"	!". ./.shrc; onx11server -n future.local 'links -g' &"
	"links -g @more"	!". ./.shrc; onx11server -n more.local 'links -g' &"
	"google something"	!". ./.shrc; onx11server -n future.local 'links -g https://google.ca/' &"
	""			f.separator
	"Xauth..."		f.menu "xauth"
 ])
 ifelse([ON_OSX], [
	""			f.separator
	"Mac OS X Apps..."	f.menu "osx-apps"
 ], [
	""			f.separator
	"Xclipboard"		!"xclipboard &"
 ])
	""			f.separator
	"UXterm [@CLIENTHOST]"	!"uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP &"
	"UXterm-big [@CLIENTHOST]"	!"uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP &"
	#
 ifdef([USE_X11SERVER], [
	"Xterm @X11SERVER"	!". ./.shrc; onx11server -n $X11SERVER 'xterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @X11SERVER"	!". ./.shrc; onx11server -n $X11SERVER 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"Xterm-big @X11SERVER"	!". ./.shrc; onx11server -n $X11SERVER 'xterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @X11SERVER"	!". ./.shrc; onx11server -n $X11SERVER 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
 ])
 ifdef([AT_VERY_WEIRD], [
	"UXterm @xenful"	!". ./.shrc; onx11server -n xenful.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @xenful"	!". ./.shrc; onx11server -n xenful.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @xentastic"	!". ./.shrc; onx11server -n xentastic.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @xentastic"	!". ./.shrc; onx11server -n xentastic.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	#
	"UXterm @building"	!". ./.shrc; onx11server -n building.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @building"	!". ./.shrc; onx11server -n building.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @more"		!". ./.shrc; onx11server -n more.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @more"	!". ./.shrc; onx11server -n more.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @future"	!". ./.shrc; onx11server -n future.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @future"	!". ./.shrc; onx11server -n future.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @isit"		!". ./.shrc; onx11server -n isit.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @isit"	!". ./.shrc; onx11server -n isit.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @lilbit"	!". ./.shrc; onx11server -n lilbit.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @lilbit"	!". ./.shrc; onx11server -n lilbit.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @rpi"		!". ./.shrc; onx11server -n rpi.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @rpi"	!". ./.shrc; onx11server -n rpi.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @historically"	!". ./.shrc; onx11server -n historically.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @historically" !". ./.shrc; onx11server -n historically.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @once"		!". ./.shrc; onx11server -n once.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @once"	!". ./.shrc; onx11server -n once.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @freebsd"	!". ./.shrc; RSH=ssh onx11server -n freebsd.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @freebsd"	!". ./.shrc; RSH=ssh onx11server -n freebsd.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @nbt"		!". ./.shrc; onx11server -n nbt.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @nbt"	!". ./.shrc; onx11server -n nbt.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm @nbt-cur"	!". ./.shrc; onx11server -n nbt-cur.local 'uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @nbt-cur"	!". ./.shrc; onx11server -n nbt-cur.local 'uxterm OPT_XTERM_TN OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	#
	# xxx this is not so useful as if the SSH connection drops then the
	# window simply disappears with no hint as to when or why!  See further
	# discussion in ~/.xinitrc regarding running X11 via tunnels, etc.
	#
	"Slogin @central"	!"uxterm OPT_XTERM_TN OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP -e 'slogin -C central.weird.com' &"
 ])
 ifdef([AT_WEIRD], [
  ifelse(HOSTNAME, once.weird.com, [], [
	"UXterm @once"		!"$RSH -n once.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @once"	!"$RSH -n once.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
	"Xterm @most"		!"$RSH -n most.weird.com exec /usr/X11R6/bin/xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP &"
	"UXterm @most"		!"$RSH -n most.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"Xterm-big @most"	!"$RSH -n most.weird.com exec /usr/X11R6/bin/xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP &"
	"UXterm-big @most"	!"$RSH -n most.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ifelse(HOSTNAME, historically.weird.com, [], [
  	"UXterm @historically"		!"$RSH -n historically.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @historically"	!"$RSH -n historically.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
	"UXterm @freely"	!"$RSH -n freely.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"UXterm-big @freely"	!"$RSH -n freely.weird.com '. ./.profile; exec uxterm OPT_XTERM_TN -display '$REMOTE_DISPLAY' OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
	"Xterm @isit"		!"$RSH -n isit.weird.com exec /usr/X11R6/bin/xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LITTLE_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP &"
	"Xterm-big @isit"	!"$RSH -n isit.weird.com exec /usr/X11R6/bin/xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_BIG_XTERM OPT_LOGIN_XTERM OPT_ZICONBEEP &"
 ])
	""			f.separator
	"Console Server"	f.menu "consoles"
	""			f.separator
	"TermSrvr Telnets"	f.menu "termservers"
	""			f.separator
 ifelse([ON_OSX], [
 ], [
	"Xlock"			!"xlock -mode flame &"
 ])
	"Exit..."		f.menu "exit"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "consoles"
{
	"Console Server"	f.title
  define(CONSOLE_REP, [
	"$1 []"			!"uxterm OPT_XTERM_TN -geometry 132x66 -fn 5x7 -cn -rw -sb -si -sk -sl 2048 OPT_ZICONBEEP -n $1 -T '\"$1 Virtual Console\"' -e console $1 &"
  ])
	CONSOLE_REP(xenful)
	CONSOLE_REP(xentastic)
	CONSOLE_REP(bbb-1)
	CONSOLE_REP(rpi-1)
	CONSOLE_REP(lilbit)
	CONSOLE_REP(more)
	CONSOLE_REP(building)
	CONSOLE_REP(future)
	CONSOLE_REP(freebsd)
	CONSOLE_REP(historically)
	CONSOLE_REP(once)
	CONSOLE_REP(isit)
	CONSOLE_REP(whats)
	CONSOLE_REP(flipping)
  undefine(CONSOLE_REP)
}

menu "termservers"
{
	"Term Srvr Telnets"	f.title
	"telnet controlling"	!"uxterm OPT_XTERM_TN OPT_LOGIN_XTERM OPT_ZICONBEEP -n controlling -T 'controlling Virtual Console' -e telnet controlling.local 2000 &"
	""			f.separator
  define(CONTROLLING_REP, [
	"Controlling-20$1"	!"uxterm -geometry 132x66 -fn 5x7 OPT_XTERM_TN OPT_LOGIN_XTERM OPT_ZICONBEEP -n Ctrl20$1 -T 'Controlling-20$1' -e telnet controlling.local 20$1 &"
  ])
###	CONTROLLING_REP(01)	# this is the physical console
	CONTROLLING_REP(02)
	CONTROLLING_REP(03)
	CONTROLLING_REP(04)
	CONTROLLING_REP(05)
	CONTROLLING_REP(06)
	CONTROLLING_REP(07)
	CONTROLLING_REP(08)
  undefine(CONTROLLING_REP)
}

menu "defops"
{
	"TWM_TYPE - Version TWM_VERSION"	f.title
	"Window Operations..."	f.menu "winops"
	"Window Manager..."	f.menu "wmops"
	""			f.separator
	"Applications..."	f.menu "applications"
	"Preferences..."	f.menu "preferences"
	""			f.separator
	"Exit..."		f.menu "exit"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "winops"
{
	"Window Operations"	f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"Move"			f.move
	"MovePack"		f.movepack
	"MovePush"		f.movepush
	""			f.separator
	"Resize"		f.resize
	""			f.separator
	"Raise"			f.raise
	"Lower"			f.lower
	"Circle Up"		f.circleup
	"Circle Down"		f.circledown
	""			f.separator
	"Occupy All"		f.occupyall
	"Vanish"		f.vanish
	"Occupy ..."		f.occupy
	""			f.separator
	"Refresh"		f.winrefresh
	"Save"			f.saveyourself
	"Identify"		f.identify
	""			f.separator
	"Zoom..."		f.menu "zooms"
	"Pack..."		f.menu "packs"
	"Fill..."		f.menu "fills"
	""			f.separator
	"Squeeze (toggle)"	f.squeeze
	"Iconify"		f.iconify
	"DeIconify"		f.deiconify
	""			f.separator
	"Focus"			f.focus
	"Unfocus"		f.unfocus
	""			f.separator
	"Delete"		f.delete
	"Delete Or Destroy"	f.deleteordestroy
	"Kill"			f.destroy
	""			f.separator
	"Pin this menu"		f.pin
}

menu "wmops"
{
	"Window Manager"	f.title
	"Icon Manager..."	f.menu "iconmgr"
	"WorkSpace Summary..."	f.menu "TwmWindows"
	"Window Summary..."	f.menu "TwmAllWindows"
	""			f.separator
	"Toggle workspace"	f.togglestate
	"ShowWorkspaceManager"	f.showWorkspaceMgr
	"HideWorkspaceManager"	f.hideWorkspaceMgr
	"Adopt Window"		f.adoptwindow
	"Identify Window"	f.identify
	""			f.separator
	"Toggle workspace"	f.togglestate
	"Refresh Screen"	f.refresh
	"Refresh Window"	f.winrefresh
	"Save"			f.saveyourself
	""			f.separator
	"Restart TWM_TYPE"	f.restart
	"About TWM_TYPE TWM_VERSION"	f.version
	""			f.separator
	"Pin this menu"		f.pin
}

menu "packs"
{
	"Window Packing"	f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"To-the-Left"		f.pack "left"
	"To-the-Right"		f.pack "right"
	"To-the-Top"		f.pack "top"
	"To-the-Bottom"		f.pack "bottom"
}

menu "zooms"
{
	"Zoom to Screen"	f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"Top-to-bottom"		f.zoom
	"Full-Screen"		f.fullzoom
	"To-the-Left"		f.leftzoom
	"To-the-Right"		f.rightzoom
	"To-the-Top"		f.topzoom
	"To-the-Bottom"		f.bottomzoom
}

menu "fills"
{
	"Zoom to Fill"		f.title
	"Save Geometry"		f.savegeometry
	"Restore Geometry"	f.restoregeometry
	""			f.separator
	"Top-to-bottom"		f.zoom
	"Full-Screen"		f.fullzoom
	"Fill-to-the-Left"	f.fill "left"
	"Fill-to-the-Right"	f.fill "right"
	"Fill-to-the-Top"	f.fill "top"
	"Fill-to-the-Bottom"	f.fill "bottom"
}

menu "iconmgr"
{
	"Icon Manager"		f.title
	"Show Iconmgr"		f.showiconmgr
	"Hide Iconmgr"		f.hideiconmgr
	"Sort"			f.sorticonmgr
	""			f.separator
	"Next"			f.nexticonmgr
	"Previous"		f.previconmgr
	""			f.separator
	"Up"			f.upiconmgr
	"Down"			f.downiconmgr
	"Forward"		f.forwiconmgr
	"Back"			f.backiconmgr
	""			f.separator
	"Left"			f.lefticonmgr
	"Right"			f.righticonmgr
}

# "personal preference" adjustments
menu "preferences"
{
	"Preferences"		f.title
	"Viewres"		!"viewres &"
	"Editres"		!"editres &"
	"xprop"			!"xprop &"
	"Query"			!"xset q"
	"Xkeycaps"		!"xkeycaps &"
	"Auto Repeat On"	!"xset r on"
	"Auto Repeat Off"	!"xset r off"
	"Bell On"		!"xset b 100 800"
	"Bell Off"		!"xset b 0"
	"Click On"		!"xset c on"
	"Click Off"		!"xset c off"
	"Mouse Fast"		!"xset m 9 5"
	"Mouse Normal"		!"xset m 6 3"
	"Mouse Slow"		!"xset m 1 1"
	"Mouse Default"		!"xset m default"
	"Bug Compat On"		!"xset bc"
	"Bug Compat Off"	!"xset -bc"
	"ReHash FP"		!"xset fp rehash"
	"Reset FP Default"	!"xset fp default"
 ifelse(COLOR, Yes,
	["Colour Map Ctl..."	f.menu "cmap"], [])
	"Screen Saver..."	f.menu "screensaver"
	"Keyboard LEDs..."	f.menu "leds"
	""			f.separator
	"Pin this menu"		f.pin
}

ifelse(COLOR, Yes,
[menu "cmap"
{
	"Colour Map Control"	f.title
	"View Default Map"	!"xcmap &"
	""			f.separator
	"Set All"		!"xstdcmap -all -verbose &"
	"Set Best"		!"xstdcmap -best -verbose &"
	"Set Default"		!"xstdcmap -default -verbose &"
	"Set Grey"		!"xstdcmap -gray -verbose &"
	"Set Red"		!"xstdcmap -red -verbose &"
	"Set Green"		!"xstdcmap -green -verbose &"
	"Set Blue"		!"xstdcmap -blue -verbose &"
	""			f.separator
	"Delete default"	!"xstdcmap -delete default -verbose &"
	"Delete best"		!"xstdcmap -delete best -verbose &"
	"Delete grey"		!"xstdcmap -delete gray -verbose &"
	"Delete red"		!"xstdcmap -delete red -verbose &"
	"Delete green"		!"xstdcmap -delete green -verbose &"
	"Delete blue"		!"xstdcmap -delete blue -verbose &"
}
], [])

menu "screensaver"
{
	"Screen Saver Features"	f.title
	"Set Timer..."		f.menu "screensavertime"
	"Enable"		!"xset s on"
	"Disable"		!"xset s off"
	"Use Video Blanking"	!"xset s blank"
	"Use Background Pattern" !"xset s noblank"
	""			f.separator
	"Set Defaults"		!"xset s default"
}

menu "screensavertime"
{
	"Enable Screen Saver after:"	f.title
	"5  sec"			!"xset s 5"
	"30 sec"			!"xset s 30"
	"1  min"			!"xset s 60"
	"5  min"			!"xset s 300"
	"10 min"			!"xset s 600"
	"15 min"			!"xset s 900"
}

menu "leds"
{
	"Keyboard LED Control"	f.title
	"all on"		!"xset led on"
	"all off"		!"xset led off"
	"1 on"			!"xset led 1"
	"1 off"			!"xset -led 1"
	"2 on"			!"xset led 2"
	"2 off"			!"xset -led 2"
	"3 on"			!"xset led 3"
	"3 off"			!"xset -led 3"
	"4 on"			!"xset led 4"
	"4 off"			!"xset -led 4"
}

menu "exit"
{
	"Exit CTWM"				f.title
	"        Confirm...."			f.quit
}

menu "applications"
{
	"Applications"			f.title
 ifdef([AT_WEIRD], [
	"Xauth to Weird.com..."		f.menu "xauth-to-weird"
	""				f.separator
 ])
 ifdef([AT_VERY_WEIRD], [
	"Xauth..."			f.menu "xauth"
	""				f.separator
 ])
 ifdef([ON_OSX], [
	"Mac OS X Apps..."		f.menu "osx-apps"
	""				f.separator
 ])
	""				f.separator
	"Xterm's Everywhere..."		f.menu "xterm"
	"Emacs Everywhere..."		f.menu "emacs"
	""				f.separator
	"Monitors..."			f.menu "monitors"
	"Locks..."			f.menu "locks"
	"Backgrounds..."		f.menu "backgrounds"
	"Audio Tools..."		f.menu "audios"
	"Graphics Tools..."		f.menu "graphics"
	"Other Tools..."		f.menu "tools"
	"Miscellaneous..."		f.menu "miscapps"
	"Games..."			f.menu "games"
	""			f.separator
	"Pin this menu"		f.pin
}

menu "audios"
{
	"Audio Tools"			f.title
	"xmms"				!"xmms -m &"
	""				f.separator
	"audemo"			!"cd HOME/lib/sounds; audemo &"
	"auedit"			!"auedit &"
	"aupanel"			!"aupanel &"
	"auphone"			!"auphone &"
	"auwave"			!"auwave &"
	""				f.separator
	"xcdplayer"			!"xcdplayer &"
	"xmcd"				!"xmcd &"
}

menu "graphics"
{
	"Graphics Applications"		f.title
	"xart"				!"xart &"
	"xpaint"			!"xpaint &"
	"xfig"				!"xfig &"
	"tgif"				!"tgif &"
	"xbmbrowser"			!"xbmbrowser &"
	"gimp"				!"gimp &"
	"xcol"				!"xcol &"
	"xcolor"			!"xcolor &"
	"xcolsel"			!"xcolsel &"
	"xvgr"				!"xvgr &"
	"xpdf"				!"xpdf &"
	"xmag"				!"xmag &"
	"xditview"			!"xditview &"
	"xcmap"				!"xcmap &"
	"xwd > ~/tmp/win.xwd"		!"xwd > $HOME/tmp/win.xwd"
	"xwd -root > ~/tmp/root.xwd"	!"xwd -root > $HOME/tmp/root.xwd"
}

menu "tools"
{
	"Miscellaneous Tools"		f.title
	"xclipboard"			!"xclipboard &"
	"xcutsel"			!"xcutsel &"
	"xfontsel"			!"xfontsel &"
	"xkeycaps"			!"xkeycaps &"
	"xdpr"				!"xdpr -device ps &"
}

menu "miscapps"
{
	"Miscellaneous Applications"	f.title
	"xalarm"			!"xalarm &"
	"xcalc"				!"xcalc &"
	"xcalendar"			!"xcalendar &"
	"xedit"				!"xedit &"
	"xfd"				!"xfd &"
	"xftp"				!"xftp &"
	"xmail"				!"xmail &"
	"xman"				!"xman &"
	"xmh"				!"xmh &"
	"xpostit"			!"xpostit &"
	"xplan"				!"xplan &"
	"xrolodex"			!"xrolodex &"
	"xtalk"				!"xtalk &"
	"xhelp"				!"xhelp &"
	"xrn"				!"xrn &"
	"xshell"			!"xshell &"
	"xvnews"			!"xvnews &"
	"xvtdl"				!"xvtdl &"
	"axe"				!"axe &"
	"plan"				!"plan &"
	"pan"				!"pan &"
	"timekeeper"			!"timekeeper &"
}

menu "emacs"
{
	"Emacsen"		f.title
				# XXX should this start a shell that sources .profile first?
	"@localhost"		!"emacs -i &"
 ifdef([USE_X11SERVER], [
	"@X11SERVER"		!"$RSH -n $X11SERVER 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifdef([AT_VERY_WEIRD], [
	"@more"			!"$RSH -n more.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@more"			!"$RSH -n more.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@building"		!"$RSH -n building.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@building"		!"$RSH -n building.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@future"		!"$RSH -n future.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@future"		!"$RSH -n future.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@once"			!"$RSH -n once.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
	"@once"			!"$RSH -n once.local 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
ifdef([AT_WEIRD], [
 ifelse(HOSTNAME, most.weird.com, [], [
	"@most"			!"$RSH -n most.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, building.weird.com, [], [
	"@building"		!"$RSH -n building.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, once.weird.com, [], [
	"@once"			!"$RSH -n once.weird.com 'export DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, whats.weird.com, [], [
	"@whats"		!"$RSH -n whats.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, almost.weird.com, [], [
	"@almost"		!"$RSH -n almost.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, always.weird.com, [], [
	"@always"		!"$RSH -n always.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, historically.weird.com, [], [
	"@historically"		!"$RSH -n historically.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, starting-out.weird.com, [], [
	"@starting-out"		!"$RSH -n starting-out.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
 ifelse(HOSTNAME, sometimes.weird.com, [], [
	"@sometimes"		!"$RSH -n sometimes.weird.com 'DISPLAY='$REMOTE_DISPLAY'; . ./.profile; exec emacs -display '$REMOTE_DISPLAY' -i' &"
 ])
])
}

menu "monitors"
{
	"Monitors"		f.title
	"xconsole"		!"xconsole -geometry 500x120-0-0 -notify -verbose &"
	"xconsole x-errors"	!"xconsole -geometry 500x120-0-0 -notify -verbose -file HOME/.xsession-errors &"
	"xconsole x-errors-DISPLAY" !"xconsole -geometry 500x120-0-0 -notify -verbose -file HOME/.xsession-errors-`echo $DISPLAY | sed 's/\.[[0-9]]*$//'` &"
	""			f.separator
	"xclock"		!"xclock -geometry 190x190-0+0 &"
	"xclock -digital"	!"xclock -geometry 190x30-0+192 -digital &"
	"swissclock"		!"swisswatch -name swissclock -geometry 190x190-0+0 &"
	"xchrono"		!"xchrono -local Toronto -tokyo &"
	"asclock"		!"asclock -shape -position -200+234 &"
	""			f.separator
	"xbiff"			!"xbiff -rv -bw 0 &"
	"xlbiff"		!"xlbiff &"
	"xbuffy"		!"xbuffy -geometry 80x25-0+235 -shortnames -header 0 &"
	"xbuffy w/-acmd"	!"xbuffy -geometry 80x25-0+235 -shortnames -header 0 -acmd \"$AUDIOPLAYER HOME/lib/sounds/newmail &\" &"

	""			f.separator
	"xload"			!"xload -geometry 120x40-200+0 -hl XLOAD_HL &"
 ifdef([USE_X11SERVER], [
	"xload @X11SERVER"	!". ./.profile; onx11server -n $X11SERVER 'xload -display $REMOTE_DISPLAY -geometry 120x40-200+48 -hl XLOAD_HL' &"
 ])
 ifdef([AT_VERY_WEIRD], [
	"xload @building"	!"$RSH -n building.local \". ./.profile; exec xload -display $REMOTE_DISPLAY -geometry 120x40-200+48 -hl red\" &"
	"xload @more"		!"$RSH -n more.local \". ./.profile; exec xload -display $REMOTE_DISPLAY -geometry 120x40-200+96 -hl red\" &"
	"xload @central"	!"ssh -Y -n woods@central.avoncote.ca '. ./.profile; exec xload -geometry 120x40-200+144 -hl red' &"
	"xload @future"		!"$RSH -n future.local \". ./.profile; exec xload -display $REMOTE_DISPLAY -geometry 120x40-200+192 -hl red\" &"
	"xload @xenful"		!"$RSH -n xenful.local \". ./.profile; exec xload -display ${REMOTE_DISPLAY} -geometry 120x40-200+240 -hl red\" &"
	"xload @xentastic"	!"$RSH -n xentastic.local \". ./.profile; exec xload -display $REMOTE_DISPLAY -geometry 120x40-70+240 -hl red\" &"
	"xload @xentral"	!"ssh -Y -n woods@xentral.avoncote.ca '. ./.profile; exec xload -geometry 75x40-0+240 -hl red' &"
	#
	"xload @historically"	!"$RSH -n historically.local \". ./.profile; exec xload -display $REMOTE_DISPLAY -geometry 120x40-70+240 -hl red\" &"
 ])
	"xosview"		!"xosview -geometry 120x137-200+0 &"
 ifdef([USE_X11SERVER], [
	"xosview @X11SERVER"	!". ./.profile; onx11server -n $X11SERVER 'xosview -display $REMOTE_DISPLAY' &"
 ])
	"xcpustate"		!"xcpustate -geometry 190x20-0+270 -shorten 1 -wait -cpu -disk &"
 ifdef([USE_X11SERVER], [
	"xcpustate @X11SERVER"	!". ./.profile; onx11server -n $X11SERVER 'xcpustate -display $REMOTE_DISPLAY -geometry 190x20-0+300 -shorten 1 -wait -cpu -disk' &"
 ])
	"xuvmstat"		!"xuvmstat &"
	""			f.separator
	"xnetload localhost"	!"xnetload -hl grey90 -scale 0 -label 'local netload' localhost &"
	"xnetload @xdmhost"	!"xnetload -hl grey90 -scale 0 -label ${XDMHOST}-net $XDMHOST &"
	""			f.separator
	"tkined"		!"tkined &"
}

menu "locks"
{
	"Locks"			f.title
	"xlock"			!"xlock -mode flame &"
	"xlock remote"		!"xlock -remote -mode flame &"
}

menu "backgrounds"
{
	"Backgrounds"		f.title
	"xearth"		!"xearth -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth nogrid"		!"xearth -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -wait 900 -nice 10 &"
	"xearth orbiting"	!"xearth -bigstars 10 -pos orbit,0.1,0 -rot 10 -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth orbiting fast"	!"xearth -bigstars 10 -pos orbit,0.1,0 -rot 5 -label -labelpos +1+1 -grid -wait 0 &"
 ifelse(COLOR, Yes, [
	"xearth -gamma 1.7"	!"xearth -gamma 1.7 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth -gamma 1.7 nogrid" !"xearth -gamma 1.7 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -wait 900 -nice 10 &"
	"xearth -gamma 1.7 orbiting" !"xearth -gamma 1.7 -bigstars 10 -pos orbit,0.1,0 -rot 10 -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
	"xearth -gamma 1.7 orbiting fast" !"xearth -gamma 1.7 -bigstars 10 -pos orbit,0.1,0 -rot 5 -label -labelpos +1+1 -grid -wait 0 &"
	"xearth on greyscale"	!"xearth -gamma 1.6 -night 15 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
 ], [
	"xearth on mono"	!"xearth -mono -night 15 -bigstars 10 -pos fixed,${LATITUDE:-0},${LONGITUDE:-0} -label -labelpos +1+1 -grid -wait 900 -nice 10 &"
 ])
	"xplanet"		!"xplanet  -label -labelpos +15-15 -radius 60 -latitude ${LATITUDE:-0} -longitude ${LONGITUDE:-0} -wait 300 &"
	"xphoon"		!"xphoon -t 10 &"
	"xsetroot eschernknot"	!"xsetroot -bitmap $X11PATH/[include]/X11/bitmaps/escherknot"
	"xsetroot xsnow"	!"xsetroot -bitmap $X11PATH/[include]/X11/bitmaps/xsnow"
}

menu "games"
{
	"X11 Games"		f.title
	"Abuse"			!"abuse &"
	"battleball"		!"battleball $DISPLAY &"
	"GalaXa"		!"galaxa &"
	"nighthawk"		!"nighthawk &"
	"Spider"		!"spider &"
	"xbat"			!"xbat &"
	"xbill"			!"xbill &"
	"xbomb"			!"xbomb &"
	"xbomber"		!"xbomber &"
	"xdemineur"		!"xdemineur &"
	"xevil"			!"xevil &"
	"xfreecell"		!"xfreecell &"
	"xgalaga"		!"xgalaga &"
	"xjig"			!"xjig &"
	"xkobo"			!"xkobo &"
	"xmahjongg"		!"xmahjongg &"
	"xmris"			!"xmris &"
	"xpat2"			!"xpat2 &"
	"xpilot"		!"xpilot &"
	"xpipeman"		!"xpipeman &"
	"xscrabble"		!"xscrabble &"
	"xsoldier"		!"xsoldier &"
	"xskat"			!"xskat &"
	"xworm"			!"xworm &"
	""			f.separator
	"X11 Sample Toys..."	f.menu "samplegames"
}

menu "samplegames"
{
	"X11 Sample Toys"	f.title
	"Xeyes"			!"xeyes &"
	"Xgc"			!"xgc &"
	"Xgas"			!"xgas &"
	"Xlogo"			!"xlogo &"
	"ico"			!"ico &"
	"maze"			!"maze &"
	"puzzle"		!"puzzle &"
}

menu "xterm"
{
	"Xterms Everywhere"	f.title
	"Xterm @localhost"	!"$X11BIN/xterm OPT_XTERM_TN OPT_LOGIN_XTERM OPT_ZICONBEEP &"
 ifdef([AT_WEIRD], [
  ifelse(HOSTNAME, most.weird.com, [], [
	"Xterm @most"		!". ./.profile; onx11server -n most.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
  ifelse(HOSTNAME, historically.weird.com, [], [
	"Xterm @historically"	!". ./.profile; onx11server -n historically.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
  ifelse(HOSTNAME, building.weird.com, [], [
	"Xterm @building" 	!". ./.profile; onx11server -n building.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
  ifelse(HOSTNAME, once.weird.com, [], [
	"Xterm @once"		!". ./.profile; onx11server -n once.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM' &"
  ])
  ifelse(HOSTNAME, very.weird.com, [], [
	"Xterm @very"		!". ./.profile; onx11server -n very.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM' &"
  ])
  ifelse(HOSTNAME, almost.weird.com, [], [
	"Xterm @almost"		!". ./.profile; onx11server -n almost.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM' &"
  ])
  ifelse(HOSTNAME, whats.weird.com, [], [
	"Xterm @whats"		!". ./.profile; onx11server -n whats.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM' &"
  ])
  ifelse(HOSTNAME, sometimes.weird.com, [], [
	"Xterm @sometimes" 	!". ./.profile; onx11server -n sometimes.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])ksrv
  ifelse(HOSTNAME, always.weird.com, [], [
	"Xterm @always" 	!". ./.profile; onx11server -n always.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
  ifelse(HOSTNAME, freely.weird.com, [], [
	"Xterm @freely" 	!". ./.profile; onx11server -n freely.weird.com 'xterm OPT_XTERM_TN -display $REMOTE_DISPLAY OPT_LOGIN_XTERM OPT_ZICONBEEP' &"
  ])
])
}

# for pushing our AUTH cookies over to the various target hosts in case they
# don't share $HOME with the local host...
#
#	xauth nextract - $REMOTE_DISPLAY | rsh $X11SERVER $X11BIN/xauth nmerge -
#
ifdef([AT_WEIRD], [
menu "xauth-to-weird"
{
	"Xauth pushes to Weird.com"	f.title
 ifdef([USE_X11SERVER], [
	"Xauth to X11SERVER"	!"xauth nextract - $REMOTE_DISPLAY | (. ./.profile; onx11server $X11SERVER 'xauth nmerge -' ) &"
 ])
	"Xauth to most"		!"xauth nextract - $REMOTE_DISPLAY | $RSH most.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to isit"		!"xauth nextract - $REMOTE_DISPLAY | $RSH isit.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to once"		!"xauth nextract - $REMOTE_DISPLAY | $RSH once.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to historically"	!"xauth nextract - $REMOTE_DISPLAY | $RSH historically.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to freely"	!"xauth nextract - $REMOTE_DISPLAY | $RSH freely.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to whats"	!"xauth nextract - $REMOTE_DISPLAY | $RSH whats.weird.com exec /usr/X11R6/bin/xauth nmerge - &"
}
])

ifdef([AT_VERY_WEIRD], [
menu "xauth"
{
	"Xauth pushes"		f.title
	"Xauth to more"		!"xauth nextract - $REMOTE_DISPLAY | $RSH more.local exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to historically"	!"xauth nextract - $REMOTE_DISPLAY | $RSH historically.local exec /usr/X11R6/bin/xauth nmerge - &"
	"Xauth to once"		!"xauth nextract - $REMOTE_DISPLAY | $RSH once.local exec /usr/X11R6/bin/xauth nmerge - &"
}
])
ifdef([ON_OSX], [
menu "osx-apps"
{
	"Mac OS X Applications"	f.title
	"Activity Monitor"	!"open '/Applications/Utilities/Activity Monitor.app' &"
	"Adium"			!"open /Applications/Adium.app &"
	"Console"		!"open /Applications/Utilities/Console.app &"
	"Google Chrome"		!"open '/Applications/Google Chrome.app' &"
	"iCal"			!"open /Applications/iCal.app &"
	"iPhoto"		!"open /Applications/iPhoto.app &"
	"iTunes"		!"open /Applications/iTunes.app &"
	"Mail"			!"open /Applications/Mail.app &"
	"Preview"		!"open /Applications/Preview.app &"
	"System Preferences"	!"open '/Applications/Utilities/System Preferences.app' &"
	"System Profiler"	!"open '/Applications/Utilities/System Profiler.app' &"
	"Terminal"		!"open /Applications/Utilities/Terminal.app &"
}
])

# Local Variables:
# comment-start: "# "
# conf-space-keywords: "\\(ifdef\\|ifelse\\|define\\|changequote\\|eval\\)"
# End:
